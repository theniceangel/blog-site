(self.webpackChunkblog_site=self.webpackChunkblog_site||[]).push([[2873],{8261:(l,n,e)=>{"use strict";e.r(n),e.d(n,{data:()=>s});const s={key:"v-ff66c836",path:"/webpack4/configuration/node/",title:"node",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"NodeStuffPlugin",slug:"nodestuffplugin",children:[]},{level:2,title:"NodeSourcePlugin",slug:"nodesourceplugin",children:[]}],filePathRelative:"webpack4/configuration/node/README.md",git:{updatedTime:1628438767e3,contributors:[{name:"jizhi",email:"jizhi@didiglobal.com",commits:2}]}}},6903:(l,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>sl});var s=e(6252);const o=(0,s.uE)('<h1 id="node" tabindex="-1"><a class="header-anchor" href="#node" aria-hidden="true">#</a> node</h1><p>node 的配置项决定了是否需要给 nodejs 的核心模块做一层 polyfill，因此在浏览器的环境下，也能安全使用这些 API。</p><p>它可以配置为 <code>false</code>，表示不做任何处理，也可以配置成如下对象：</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//...</span></span>\n<span class="line"><span style="color:#E1E4E8;">  node: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 使用 NodeStuffPlugin</span></span>\n<span class="line"><span style="color:#E1E4E8;">    __filename: </span><span style="color:#9ECBFF;">&#39;mock&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    __dirname: </span><span style="color:#9ECBFF;">&#39;mock&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// \b使用 NodeSourcePlugin</span></span>\n<span class="line"><span style="color:#E1E4E8;">    console: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 浏览器有 console，所以不必处理</span></span>\n<span class="line"><span style="color:#E1E4E8;">    global: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    process: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    Buffer: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    setImmediate: </span><span style="color:#79B8FF;">true</span></span>\n<span class="line"><span style="color:#E1E4E8;">    fs: </span><span style="color:#9ECBFF;">&#39;empty&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    dns: </span><span style="color:#9ECBFF;">&#39;mock&#39;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    url: </span><span style="color:#79B8FF;">true</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ... 省略其他的 node core libs 配置</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">};</span></span>\n<span class="line"></span></code></pre></div><p>node 的选项值可以配置为以下的值：</p>',5),t=(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"true"),(0,s.Uk)(": 提供 polyfill")])],-1),a=(0,s.Wm)("strong",null,"'mock'",-1),p=(0,s.Uk)(": 提供 mock 功能函数，详细的见 "),c=(0,s.Uk)("node-libs-browser"),r=(0,s.Uk)(" mock 模块"),d=(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"'empty'"),(0,s.Uk)(": 提供一个空对象")])],-1),i=(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"false"),(0,s.Uk)(": 什么都不做")])],-1),u={class:"custom-container warning"},m=(0,s.Wm)("p",{class:"custom-container-title"},"WARNING",-1),E=(0,s.Uk)("并不是所有的模块都支持如上四个配置项，对于不需要引入的 node 中的对象，比如 process, setImmediate，这些就不能配置为 "),W=(0,s.Wm)("code",null,"'empty'",-1),g=(0,s.Uk)("，对于 "),y=(0,s.Wm)("code",null,"fs",-1),f=(0,s.Uk)(" 就可以配置为 "),k=(0,s.Wm)("code",null,"'empty'",-1),h=(0,s.Uk)("，但是不能配置为 "),b=(0,s.Wm)("code",null,"'mock'",-1),U=(0,s.Uk)("，因为 "),w=(0,s.Uk)("node-libs-browser"),x=(0,s.Uk)(" 不支持。"),F=(0,s.Wm)("h2",{id:"nodestuffplugin",tabindex:"-1"},[(0,s.Wm)("a",{class:"header-anchor",href:"#nodestuffplugin","aria-hidden":"true"},"#"),(0,s.Uk)(" NodeStuffPlugin")],-1),_=(0,s.Wm)("p",null,[(0,s.Uk)("webpack 内部使用 NodeStuffPlugin 来对代码中 "),(0,s.Wm)("code",null,"__filename"),(0,s.Uk)(" 以及 "),(0,s.Wm)("code",null,"__dirname"),(0,s.Uk)(" 做处理。")],-1),N=(0,s.Wm)("ul",null,[(0,s.Wm)("li",null,[(0,s.Wm)("strong",null,[(0,s.Wm)("code",null,"node.__filename")])])],-1),B=(0,s.Wm)("thead",null,[(0,s.Wm)("tr",null,[(0,s.Wm)("th",{style:{"text-align":"left"}},"值"),(0,s.Wm)("th",{style:{"text-align":"right"}},"描述")])],-1),P=(0,s.Wm)("td",{style:{"text-align":"left"}},[(0,s.Wm)("code",null,"true")],-1),S={style:{"text-align":"right"}},v=(0,s.Uk)("文件相对于 "),A=(0,s.Uk)("context"),j=(0,s.Uk)(" 选项的路径"),C=(0,s.Wm)("tr",null,[(0,s.Wm)("td",{style:{"text-align":"left"}},[(0,s.Wm)("code",null,"false")]),(0,s.Wm)("td",{style:{"text-align":"right"}},"不处理")],-1),D=(0,s.Wm)("tr",null,[(0,s.Wm)("td",{style:{"text-align":"left"}},[(0,s.Wm)("code",null,"mock")]),(0,s.Wm)("td",{style:{"text-align":"right"}},[(0,s.Uk)("替换成常量 "),(0,s.Wm)("code",null,"'/index.js'")])],-1),I=(0,s.Wm)("ul",null,[(0,s.Wm)("li",null,[(0,s.Wm)("strong",null,[(0,s.Wm)("code",null,"node.__dirname")])])],-1),R=(0,s.Wm)("thead",null,[(0,s.Wm)("tr",null,[(0,s.Wm)("th",{style:{"text-align":"left"}},"值"),(0,s.Wm)("th",{style:{"text-align":"right"}},"描述")])],-1),z=(0,s.Wm)("td",{style:{"text-align":"left"}},[(0,s.Wm)("code",null,"true")],-1),G={style:{"text-align":"right"}},H=(0,s.Uk)("当前文件所在文件夹相对于 "),L=(0,s.Uk)("context"),M=(0,s.Uk)(" 选项的路径"),T=(0,s.Wm)("tr",null,[(0,s.Wm)("td",{style:{"text-align":"left"}},[(0,s.Wm)("code",null,"false")]),(0,s.Wm)("td",{style:{"text-align":"right"}},"不处理")],-1),Y=(0,s.Wm)("tr",null,[(0,s.Wm)("td",{style:{"text-align":"left"}},[(0,s.Wm)("code",null,"mock")]),(0,s.Wm)("td",{style:{"text-align":"right"}},[(0,s.Uk)("替换成常量 "),(0,s.Wm)("code",null,"'/'")])],-1),q=(0,s.Uk)("详细的分析"),J=(0,s.Uk)("请👇 NodeStuffPlugin"),K=(0,s.uE)('<h2 id="nodesourceplugin" tabindex="-1"><a class="header-anchor" href="#nodesourceplugin" aria-hidden="true">#</a> NodeSourcePlugin</h2><p>webpack 内部使用 NodeSourcePlugin 来对代码中 node 的一些模块和对象进行 polyfill。</p><ul><li><strong><code>node.console</code></strong></li></ul><p>因为浏览器有了 console 的实现，所以一般配置为 <code>false</code></p><ul><li><strong><code>node.process</code></strong></li></ul><p>默认值为 <code>true</code>，可以配置成 <code>&#39;mock&#39;</code></p><ul><li><strong><code>node.global</code></strong></li></ul><p>默认值为 <code>true</code></p><ul><li><strong><code>node.Buffer</code></strong></li></ul><p>默认值为 <code>true</code>，可以配置成 <code>&#39;mock&#39;</code></p><ul><li><strong><code>node.setImmediate</code></strong></li></ul><p>默认值为 <code>true</code>，可以配置成 <code>&#39;mock&#39;</code> | <code>&#39;empty&#39;</code></p>',12),O=(0,s.Uk)("还可以设置其他的配置项，比如 "),Q=(0,s.Wm)("code",null,"node.fs",-1),V=(0,s.Uk)("、"),X=(0,s.Wm)("code",null,"node.dns",-1),Z=(0,s.Uk)("，所有的 polyfills 都是来自于 "),$=(0,s.Uk)("node-libs-browser"),ll=(0,s.Uk)("。"),nl=(0,s.Uk)("详细的分析"),el=(0,s.Uk)("请👇 NodeSourcePlugin"),sl={render:function(l,n){const e=(0,s.up)("RouterLink");return(0,s.wg)(),(0,s.j4)(s.HY,null,[o,(0,s.Wm)("ul",null,[t,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[a,p,(0,s.Wm)(e,{to:"/webpack4/third-dependencies/node-libs-browser.html"},{default:(0,s.w5)((()=>[c])),_:1}),r])]),d,i]),(0,s.Wm)("div",u,[m,(0,s.Wm)("p",null,[E,W,g,y,f,k,h,b,U,(0,s.Wm)(e,{to:"/webpack4/third-dependencies/node-libs-browser.html"},{default:(0,s.w5)((()=>[w])),_:1}),x])]),F,_,N,(0,s.Wm)("table",null,[B,(0,s.Wm)("tbody",null,[(0,s.Wm)("tr",null,[P,(0,s.Wm)("td",S,[v,(0,s.Wm)(e,{to:"/webpack4/configuration/context.html"},{default:(0,s.w5)((()=>[A])),_:1}),j])]),C,D])]),I,(0,s.Wm)("table",null,[R,(0,s.Wm)("tbody",null,[(0,s.Wm)("tr",null,[z,(0,s.Wm)("td",G,[H,(0,s.Wm)(e,{to:"/webpack4/configuration/context.html"},{default:(0,s.w5)((()=>[L])),_:1}),M])]),T,Y])]),(0,s.Wm)("p",null,[q,(0,s.Wm)(e,{to:"/webpack4/internal-plugins/NodeStuffPlugin.html"},{default:(0,s.w5)((()=>[J])),_:1})]),K,(0,s.Wm)("p",null,[O,Q,V,X,Z,(0,s.Wm)(e,{to:"/webpack4/third-dependencies/node-libs-browser.html"},{default:(0,s.w5)((()=>[$])),_:1}),ll]),(0,s.Wm)("p",null,[nl,(0,s.Wm)(e,{to:"/webpack4/internal-plugins/NodeSourcePlugin.html"},{default:(0,s.w5)((()=>[el])),_:1})])],64)}}}}]);
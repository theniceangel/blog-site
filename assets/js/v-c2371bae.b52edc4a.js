(self.webpackChunkblog_site=self.webpackChunkblog_site||[]).push([[7700],{9978:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>l});const l={key:"v-c2371bae",path:"/webpack4/internal-plugins/entry/SingleEntryPlugin.html",title:"SingleEntryPlugin",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"compiler.hooks.make",slug:"compiler-hooks-make",children:[]},{level:2,title:"compiler.hooks.compilation",slug:"compiler-hooks-compilation",children:[]}],filePathRelative:"webpack4/internal-plugins/entry/SingleEntryPlugin.md",git:{updatedTime:1630856917e3,contributors:[{name:"jizhi",email:"jizhi@didiglobal.com",commits:1}]}}},6797:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>t});var l=a(6252);const p=(0,l.uE)('<h1 id="singleentryplugin" tabindex="-1"><a class="header-anchor" href="#singleentryplugin" aria-hidden="true">#</a> SingleEntryPlugin</h1><p>SingleEntryPlugin 是在 webpack 经常使用到的插件，因为对于单页应用来说，入口只有一个文件。</p><details class="custom-container details"><summary>lib/SingleEntryPlugin.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SingleEntryPlugin</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">constructor</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">context</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">entry</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.context </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> context;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.entry </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> entry;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> name;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">compiler</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    compiler.hooks.compilation.</span><span style="color:#B392F0;">tap</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;SingleEntryPlugin&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      (</span><span style="color:#FFAB70;">compilation</span><span style="color:#E1E4E8;">, { </span><span style="color:#FFAB70;">normalModuleFactory</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        compilation.dependencyFactories.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">          SingleEntryDependency,</span></span>\n<span class="line"><span style="color:#E1E4E8;">          normalModuleFactory</span></span>\n<span class="line"><span style="color:#E1E4E8;">        );</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    );</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    compiler.hooks.make.</span><span style="color:#B392F0;">tapAsync</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;SingleEntryPlugin&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      (</span><span style="color:#FFAB70;">compilation</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">callback</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">entry</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">context</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dep</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> SingleEntryPlugin.</span><span style="color:#B392F0;">createDependency</span><span style="color:#E1E4E8;">(entry, name);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        compilation.</span><span style="color:#B392F0;">addEntry</span><span style="color:#E1E4E8;">(context, dep, name, callback);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    );</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createDependency</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">entry</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dep</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SingleEntryDependency</span><span style="color:#E1E4E8;">(entry);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    dep.loc </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { name };</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> dep;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div></details><h2 id="compiler-hooks-make" tabindex="-1"><a class="header-anchor" href="#compiler-hooks-make" aria-hidden="true">#</a> compiler.hooks.make</h2><p>SingleEntryPlugin 钩入了 compiler 的 make hook，它会调用 <code>SingleEntryPlugin.createDependency</code> 来生成 SingleEntryDependency，最后调用 compilation.addEntry 来添加入口模块。</p><h2 id="compiler-hooks-compilation" tabindex="-1"><a class="header-anchor" href="#compiler-hooks-compilation" aria-hidden="true">#</a> compiler.hooks.compilation</h2>',6),o=(0,l.Uk)("compilation.dependencyFactories 存放 SingleEntryDependency 与 normalModuleFactory 关系映射。什么是 "),e=(0,l.Uk)("Dependency"),c=(0,l.Uk)("，可以点进去看看。"),t={render:function(s,n){const a=(0,l.up)("RouterLink");return(0,l.wg)(),(0,l.j4)(l.HY,null,[p,(0,l.Wm)("p",null,[o,(0,l.Wm)(a,{to:"/webpack4/term/dependency&moduleFactory.html"},{default:(0,l.w5)((()=>[e])),_:1}),c])],64)}}}}]);
(self.webpackChunkblog_site=self.webpackChunkblog_site||[]).push([[592],{3737:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>l});const l={key:"v-34709d5f",path:"/webpack4/webpack-process/inner-plugins.html",title:"处理 innerPlugins",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"WebpackOptionsApply",slug:"webpackoptionsapply",children:[]},{level:2,title:"apply innerPlugins",slug:"apply-innerplugins",children:[{level:3,title:"第一步：compiler 准备工作",slug:"第一步-compiler-准备工作",children:[]},{level:3,title:"第二步：options.target",slug:"第二步-options-target",children:[]},{level:3,title:"第三步：options.output.library 与 options.output.libraryTarget",slug:"第三步-options-output-library-与-options-output-librarytarget",children:[]},{level:3,title:"第四步：options.externals",slug:"第四步-options-externals",children:[]},{level:3,title:"第五步：options.devtool",slug:"第五步-options-devtool",children:[]},{level:3,title:"第六步：一些不受 options 控制的插件",slug:"第六步-一些不受-options-控制的插件",children:[]},{level:3,title:"第七步：跟 JS 模块规范有关的插件",slug:"第七步-跟-js-模块规范有关的插件",children:[]},{level:3,title:"第八步：options.mode",slug:"第八步-options-mode",children:[]},{level:3,title:"第九步：options.optimization",slug:"第九步-options-optimization",children:[]},{level:3,title:"第十步：options.performance",slug:"第十步-options-performance",children:[]}]},{level:2,title:"最后一步",slug:"最后一步",children:[]},{level:2,title:"总结",slug:"总结",children:[]}],filePathRelative:"webpack4/webpack-process/inner-plugins.md",git:{updatedTime:1630856917e3,contributors:[{name:"jizhi",email:"jizhi@didiglobal.com",commits:3}]}}},4921:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>tn});var l=a(6252);const p=(0,l.uE)('<h1 id="处理-innerplugins" tabindex="-1"><a class="header-anchor" href="#处理-innerplugins" aria-hidden="true">#</a> 处理 innerPlugins</h1><p>webpack 执行内部插件的时机是在 <code>webpack.js</code> 执行完 <code>afterEnvironment</code> hook 之后，调用 <code>webpackOptionsApply.process</code> 的时候。</p><details class="custom-container details"><summary>webpack.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#6A737D;">// ... 省略其他</span></span>\n<span class="line"><span style="color:#6A737D;">// WatchIgnorePlugin 使用了 afterEnvironment hook</span></span>\n<span class="line"><span style="color:#E1E4E8;">compiler.hooks.afterEnvironment.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#6A737D;">// 接着执行 webpack 内部的 plugins</span></span>\n<span class="line"><span style="color:#E1E4E8;">compiler.options </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WebpackOptionsApply</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">process</span><span style="color:#E1E4E8;">(options, compiler);</span></span>\n<span class="line"></span></code></pre></div></details><h2 id="webpackoptionsapply" tabindex="-1"><a class="header-anchor" href="#webpackoptionsapply" aria-hidden="true">#</a> WebpackOptionsApply</h2><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WebpackOptionsApply</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OptionsApply</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">process</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">compiler</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ... 根据 options 调用所有 innerPlugins</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div><p>process 是调用 webpack 内部插件的入口，利用 Tapable hooks 的能力“钩入” webpack 内部构建流程。</p><h2 id="apply-innerplugins" tabindex="-1"><a class="header-anchor" href="#apply-innerplugins" aria-hidden="true">#</a> apply innerPlugins</h2><p>webpack 内部插件非常多，因为 webpack options 的配置项非常多，手动划分几个步骤，逐步研究：</p><h3 id="第一步-compiler-准备工作" tabindex="-1"><a class="header-anchor" href="#第一步-compiler-准备工作" aria-hidden="true">#</a> 第一步：compiler 准备工作</h3><details class="custom-container details"><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> ExternalsPlugin;</span></span>\n<span class="line"><span style="color:#6A737D;">// output.path 挂载到 compiler 上</span></span>\n<span class="line"><span style="color:#E1E4E8;">compiler.outputPath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.output.path;</span></span>\n<span class="line"><span style="color:#6A737D;">// records 允许将每次打包的构建信息写入到磁盘</span></span>\n<span class="line"><span style="color:#E1E4E8;">compiler.recordsInputPath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.recordsInputPath </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> options.recordsPath;</span></span>\n<span class="line"><span style="color:#E1E4E8;">compiler.recordsOutputPath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.recordsOutputPath </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> options.recordsPath;</span></span>\n<span class="line"><span style="color:#6A737D;">// compiler 可以配置名称，一般用于 webpack.config.js 返回数组配置对象</span></span>\n<span class="line"><span style="color:#E1E4E8;">compiler.name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.name;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">compiler.dependencies </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.dependencies;</span></span>\n<span class="line"></span></code></pre></div></details><h3 id="第二步-options-target" tabindex="-1"><a class="header-anchor" href="#第二步-options-target" aria-hidden="true">#</a> 第二步：options.target</h3><p>因为 js 可以运行在浏览器，也能运行在服务端，webpack 支持多种类型的打包，这里先研究 <code>&#39;web&#39;</code>，也就是说产物运行在浏览器的环境下。</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> JsonpTemplatePlugin;</span></span>\n<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> FetchCompileWasmTemplatePlugin;</span></span>\n<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> NodeSourcePlugin;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (options.target) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;web&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">    JsonpTemplatePlugin </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./web/JsonpTemplatePlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    FetchCompileWasmTemplatePlugin </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./web/FetchCompileWasmTemplatePlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    NodeSourcePlugin </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./node/NodeSourcePlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JsonpTemplatePlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FetchCompileWasmTemplatePlugin</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">      mangleImports: options.optimization.mangleWasmImports</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FunctionModulePlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NodeSourcePlugin</span><span style="color:#E1E4E8;">(options.node).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LoaderTargetPlugin</span><span style="color:#E1E4E8;">(options.target).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div>',13),o=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"JsonpTemplatePlugin")],-1),e=(0,l.Uk)("详细的解读，请👇"),E=(0,l.Uk)("JsonpTemplatePlugin"),t=(0,l.Uk)("。"),c=(0,l.uE)('<li><p><strong>FetchCompileWasmTemplatePlugin</strong></p><p>因为对 wasm 不了解，直接跳过。</p></li><li><p><strong>FunctionModulePlugin</strong></p><p>插件位于 <code>lib/FunctionModulePlugin.js</code>。</p><details class="custom-container details"><summary>lib/FunctionModulePlugin.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">FunctionModuleTemplatePlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./FunctionModuleTemplatePlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FunctionModulePlugin</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">compiler</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    compiler.hooks.compilation.</span><span style="color:#B392F0;">tap</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;FunctionModulePlugin&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">compilation</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FunctionModuleTemplatePlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">        compilation.moduleTemplates.javascript</span></span>\n<span class="line"><span style="color:#E1E4E8;">      );</span></span>\n<span class="line"><span style="color:#E1E4E8;">    });</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div></details><p>// TODO 应该有一篇文章分析 plugin 的具体逻辑。</p></li>',2),r=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"NodeSourcePlugin")],-1),y=(0,l.Wm)("p",null,[(0,l.Uk)("插件位于 "),(0,l.Wm)("code",null,"lib/node/NodeSourcePlugin.js"),(0,l.Uk)("，主要是为了在浏览器侧为 node 的一些 API 添加 polyfill。")],-1),i=(0,l.Uk)("详细的解读，请👇"),u=(0,l.Uk)("node 配置项"),F=(0,l.Uk)("。"),m=(0,l.uE)('<li><p><strong>LoaderTargetPlugin</strong></p><p>插件位于 <code>lib/LoaderTargetPlugin.js</code></p><details class="custom-container details"><summary>lib/LoaderTargetPlugin.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LoaderTargetPlugin</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">constructor</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">target</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.target </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> target;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">compiler</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    compiler.hooks.compilation.</span><span style="color:#B392F0;">tap</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;LoaderTargetPlugin&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">compilation</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      compilation.hooks.normalModuleLoader.</span><span style="color:#B392F0;">tap</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;LoaderTargetPlugin&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">loaderContext</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">          loaderContext.target </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.target;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"><span style="color:#E1E4E8;">      );</span></span>\n<span class="line"><span style="color:#E1E4E8;">    });</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div></details><p>插件是为了给 loader 的上下文中加入当前打包的环境，像 vue-loader 就会利用该信息，判断当前打包的产物是用于 <code>ssr</code> 还是 <code>web</code>。</p></li>',1),d=(0,l.uE)('<h3 id="第三步-options-output-library-与-options-output-librarytarget" tabindex="-1"><a class="header-anchor" href="#第三步-options-output-library-与-options-output-librarytarget" aria-hidden="true">#</a> 第三步：options.output.library 与 options.output.libraryTarget</h3><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.output.library </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> options.output.libraryTarget </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;var&quot;</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">LibraryTemplatePlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./LibraryTemplatePlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LibraryTemplatePlugin</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">    options.output.library,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    options.output.libraryTarget,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    options.output.umdNamedDefine,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    options.output.auxiliaryComment </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    options.output.libraryExport</span></span>\n<span class="line"><span style="color:#E1E4E8;">  ).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div>',2),g=(0,l.Uk)("详细的分析，请👇"),B=(0,l.Uk)("library&libraryTarget 配置项"),h=(0,l.Uk)("。"),k=(0,l.uE)('<h3 id="第四步-options-externals" tabindex="-1"><a class="header-anchor" href="#第四步-options-externals" aria-hidden="true">#</a> 第四步：options.externals</h3><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.externals) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  ExternalsPlugin </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./ExternalsPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ExternalsPlugin</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">    options.output.libraryTarget,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    options.externals</span></span>\n<span class="line"><span style="color:#E1E4E8;">  ).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div>',2),q=(0,l.Uk)("详细的分析，请👇"),C=(0,l.Uk)("externals 配置项"),P=(0,l.Uk)("。"),f=(0,l.uE)('<h3 id="第五步-options-devtool" tabindex="-1"><a class="header-anchor" href="#第五步-options-devtool" aria-hidden="true">#</a> 第五步：options.devtool</h3><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> noSources;</span></span>\n<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> legacy;</span></span>\n<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> modern;</span></span>\n<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> comment;</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span></span>\n<span class="line"><span style="color:#E1E4E8;">  options.devtool </span><span style="color:#F97583;">&amp;&amp;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  (options.devtool.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;sourcemap&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">||</span></span>\n<span class="line"><span style="color:#E1E4E8;">    options.devtool.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;source-map&quot;</span><span style="color:#E1E4E8;">))</span></span>\n<span class="line"><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hidden</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.devtool.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hidden&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">inline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.devtool.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;inline&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">evalWrapped</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.devtool.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;eval&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">cheap</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.devtool.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;cheap&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">moduleMaps</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.devtool.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;module&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  noSources </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.devtool.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;nosources&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  legacy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.devtool.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;@&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  modern </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.devtool.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;#&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  comment </span><span style="color:#F97583;">=</span></span>\n<span class="line"><span style="color:#E1E4E8;">    legacy </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> modern</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">/*</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">//@ source&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;MappingURL=[url]</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">//# source&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;MappingURL=[url]</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">*/&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> legacy</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">/*</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">//@ source&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;MappingURL=[url]</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">*/&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> modern</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">//# source&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;MappingURL=[url]&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Plugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> evalWrapped</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> EvalSourceMapDevToolPlugin</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> SourceMapDevToolPlugin;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Plugin</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">    filename: inline </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> options.output.sourceMapFilename,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    moduleFilenameTemplate: options.output.devtoolModuleFilenameTemplate,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    fallbackModuleFilenameTemplate:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      options.output.devtoolFallbackModuleFilenameTemplate,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    append: hidden </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> comment,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    module: moduleMaps </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> cheap </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    columns: cheap </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    lineToLine: options.output.devtoolLineToLine,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    noSources: noSources,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    namespace: options.output.devtoolNamespace</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.devtool </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> options.devtool.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;eval&quot;</span><span style="color:#E1E4E8;">)) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  legacy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.devtool.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;@&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  modern </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.devtool.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;#&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  comment </span><span style="color:#F97583;">=</span></span>\n<span class="line"><span style="color:#E1E4E8;">    legacy </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> modern</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">//@ sourceURL=[url]</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">//# sourceURL=[url]&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> legacy</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">//@ sourceURL=[url]&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> modern</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">//# sourceURL=[url]&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">EvalDevToolModulePlugin</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">    sourceUrlComment: comment,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    moduleFilenameTemplate: options.output.devtoolModuleFilenameTemplate,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    namespace: options.output.devtoolNamespace</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div>',2),v=(0,l.Uk)("详细的分析，请👇"),w=(0,l.Uk)("devtool 配置项"),b=(0,l.Uk)("。"),W=(0,l.uE)('<h3 id="第六步-一些不受-options-控制的插件" tabindex="-1"><a class="header-anchor" href="#第六步-一些不受-options-控制的插件" aria-hidden="true">#</a> 第六步：一些不受 options 控制的插件</h3><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JavascriptModulesPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JsonModulesPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WebAssemblyModulesPlugin</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">  mangleImports: options.optimization.mangleWasmImports</span></span>\n<span class="line"><span style="color:#E1E4E8;">}).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#6A737D;">// 解析 webpack 入口模块</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">EntryOptionPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">compiler.hooks.entryOption.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(options.context, options.entry);</span></span>\n<span class="line"></span></code></pre></div>',2),U=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"EntryOptionPlugin")],-1),z=(0,l.Uk)("EntryOptionPlugin 决定了 webpack 入口文件需要使用什么类型的插件。详细的分析，请👇"),M=(0,l.Uk)("EntryOptionPlugin"),x=(0,l.Uk)("。"),O=(0,l.uE)('<h3 id="第七步-跟-js-模块规范有关的插件" tabindex="-1"><a class="header-anchor" href="#第七步-跟-js-模块规范有关的插件" aria-hidden="true">#</a> 第七步：跟 JS 模块规范有关的插件</h3><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CompatibilityPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HarmonyModulesPlugin</span><span style="color:#E1E4E8;">(options.module).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.amd </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">AMDPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./dependencies/AMDPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">RequireJsStuffPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./RequireJsStuffPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AMDPlugin</span><span style="color:#E1E4E8;">(options.module, options.amd </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> {}).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RequireJsStuffPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CommonJsPlugin</span><span style="color:#E1E4E8;">(options.module).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LoaderPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.node </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NodeStuffPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./NodeStuffPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NodeStuffPlugin</span><span style="color:#E1E4E8;">(options.node).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CommonJsStuffPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">APIPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ConstPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UseStrictPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RequireIncludePlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RequireEnsurePlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RequireContextPlugin</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">  options.resolve.modules,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  options.resolve.extensions,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  options.resolve.mainFiles</span></span>\n<span class="line"><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ImportPlugin</span><span style="color:#E1E4E8;">(options.module).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SystemPlugin</span><span style="color:#E1E4E8;">(options.module).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"></span></code></pre></div><h3 id="第八步-options-mode" tabindex="-1"><a class="header-anchor" href="#第八步-options-mode" aria-hidden="true">#</a> 第八步：options.mode</h3><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> options.mode </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;string&quot;</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">WarnNoModeSetPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./WarnNoModeSetPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WarnNoModeSetPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div>',4),I=(0,l.Uk)("详细的分析，请👇"),T=(0,l.Uk)("mode 配置项"),j=(0,l.Uk)("。"),S=(0,l.uE)('<h3 id="第九步-options-optimization" tabindex="-1"><a class="header-anchor" href="#第九步-options-optimization" aria-hidden="true">#</a> 第九步：options.optimization</h3><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">EnsureChunkConditionsPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./optimize/EnsureChunkConditionsPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">EnsureChunkConditionsPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.removeAvailableModules) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">RemoveParentModulesPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./optimize/RemoveParentModulesPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RemoveParentModulesPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.removeEmptyChunks) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">RemoveEmptyChunksPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./optimize/RemoveEmptyChunksPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RemoveEmptyChunksPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.mergeDuplicateChunks) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">MergeDuplicateChunksPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./optimize/MergeDuplicateChunksPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MergeDuplicateChunksPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.flagIncludedChunks) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">FlagIncludedChunksPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./optimize/FlagIncludedChunksPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FlagIncludedChunksPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.sideEffects) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SideEffectsFlagPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./optimize/SideEffectsFlagPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SideEffectsFlagPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.providedExports) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">FlagDependencyExportsPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./FlagDependencyExportsPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FlagDependencyExportsPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.usedExports) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">FlagDependencyUsagePlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./FlagDependencyUsagePlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FlagDependencyUsagePlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.concatenateModules) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ModuleConcatenationPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./optimize/ModuleConcatenationPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ModuleConcatenationPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.splitChunks) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SplitChunksPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./optimize/SplitChunksPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SplitChunksPlugin</span><span style="color:#E1E4E8;">(options.optimization.splitChunks).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.runtimeChunk) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">RuntimeChunkPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./optimize/RuntimeChunkPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RuntimeChunkPlugin</span><span style="color:#E1E4E8;">(options.optimization.runtimeChunk).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.noEmitOnErrors) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NoEmitOnErrorsPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./NoEmitOnErrorsPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NoEmitOnErrorsPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.checkWasmTypes) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">WasmFinalizeExportsPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./wasm/WasmFinalizeExportsPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WasmFinalizeExportsPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> moduleIds </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.optimization.moduleIds;</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (moduleIds </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.occurrenceOrder) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    moduleIds </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;size&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.namedModules) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    moduleIds </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;named&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.hashedModuleIds) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    moduleIds </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hashed&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (moduleIds </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    moduleIds </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;natural&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (moduleIds) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NamedModulesPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./NamedModulesPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">HashedModuleIdsPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./HashedModuleIdsPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">OccurrenceModuleOrderPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./optimize/OccurrenceModuleOrderPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (moduleIds) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;natural&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;named&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NamedModulesPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hashed&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HashedModuleIdsPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;size&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OccurrenceModuleOrderPlugin</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">        prioritiseInitial: </span><span style="color:#79B8FF;">true</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;total-size&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OccurrenceModuleOrderPlugin</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">        prioritiseInitial: </span><span style="color:#79B8FF;">false</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">`webpack bug: moduleIds: ${</span><span style="color:#E1E4E8;">moduleIds</span><span style="color:#9ECBFF;">} is not implemented`</span></span>\n<span class="line"><span style="color:#E1E4E8;">      );</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> chunkIds </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.optimization.chunkIds;</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (chunkIds </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.occurrenceOrder) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    chunkIds </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;total-size&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.namedChunks) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    chunkIds </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;named&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (chunkIds </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    chunkIds </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;natural&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (chunkIds) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NaturalChunkOrderPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./optimize/NaturalChunkOrderPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NamedChunksPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./NamedChunksPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">OccurrenceChunkOrderPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./optimize/OccurrenceChunkOrderPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (chunkIds) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;natural&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NaturalChunkOrderPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;named&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OccurrenceChunkOrderPlugin</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">        prioritiseInitial: </span><span style="color:#79B8FF;">false</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NamedChunksPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;size&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OccurrenceChunkOrderPlugin</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">        prioritiseInitial: </span><span style="color:#79B8FF;">true</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;total-size&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OccurrenceChunkOrderPlugin</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">        prioritiseInitial: </span><span style="color:#79B8FF;">false</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">`webpack bug: chunkIds: ${</span><span style="color:#E1E4E8;">chunkIds</span><span style="color:#9ECBFF;">} is not implemented`</span></span>\n<span class="line"><span style="color:#E1E4E8;">      );</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.nodeEnv) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DefinePlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./DefinePlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DefinePlugin</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;process.env.NODE_ENV&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#E1E4E8;">(options.optimization.nodeEnv)</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.minimize) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">minimizer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> options.optimization.minimizer) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> minimizer </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;function&quot;</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      minimizer.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(compiler, compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      minimizer.</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TemplatedPathPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RecordIdsPlugin</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">  portableIds: options.optimization.portableRecords</span></span>\n<span class="line"><span style="color:#E1E4E8;">}).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WarnCaseSensitiveModulesPlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"></span></code></pre></div>',2),A=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"EnsureChunkConditionsPlugin")],-1),D=(0,l.Uk)("详细的分析，请👇"),R=(0,l.Uk)("EnsureChunkConditionsPlugin"),N=(0,l.Uk)("。"),_=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"RemoveParentModulesPlugin")],-1),L=(0,l.Uk)("详细的分析，请👇"),J=(0,l.Uk)("removeAvailableModules 选项配置"),H=(0,l.Uk)("。"),$=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"RemoveEmptyChunksPlugin")],-1),V=(0,l.Uk)("详细的分析，请👇"),Y=(0,l.Uk)("removeEmptyChunks 选项配置"),G=(0,l.Uk)("。"),K=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"MergeDuplicateChunksPlugin")],-1),Q=(0,l.Uk)("详细的分析，请👇"),X=(0,l.Uk)("mergeDuplicateChunks 选项配置"),Z=(0,l.Uk)("。"),ss=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"FlagIncludedChunksPlugin")],-1),ns=(0,l.Uk)("详细的分析，请👇"),as=(0,l.Uk)("flagIncludedChunks 选项配置"),ls=(0,l.Uk)("。"),ps=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"sideEffects")],-1),os=(0,l.Uk)("详细的分析，请👇"),es=(0,l.Uk)("sideEffects 选项配置"),Es=(0,l.Uk)("。"),ts=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"FlagDependencyExportsPlugin&FlagDependencyUsagePlugin&")],-1),cs=(0,l.Uk)("详细的分析，请👇"),rs=(0,l.Uk)("providedExports 与 usedExports 选项配置"),ys=(0,l.Uk)("。"),is=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"ModuleConcatenationPlugin")],-1),us=(0,l.Uk)("详细的分析，请👇"),Fs=(0,l.Uk)("concatenateModules 选项配置"),ms=(0,l.Uk)("。"),ds=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"SplitChunksPlugin")],-1),gs=(0,l.Uk)("详细的分析，请👇"),Bs=(0,l.Uk)("splitChunks 选项配置"),hs=(0,l.Uk)("。"),ks=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"RuntimeChunkPlugin")],-1),qs=(0,l.Uk)("详细的分析，请👇"),Cs=(0,l.Uk)("runtimeChunk 选项配置"),Ps=(0,l.Uk)("。"),fs=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"NoEmitOnErrorsPlugin")],-1),vs=(0,l.Uk)("详细的分析，请👇"),ws=(0,l.Uk)("noEmitOnErrors 选项配置"),bs=(0,l.Uk)("。"),Ws=(0,l.Wm)("li",null,[(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"WasmFinalizeExportsPlugin")]),(0,l.Wm)("p",null,"对 wasm 不了解，直接略过。")],-1),Us=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"有关于 moduleIds")],-1),zs=(0,l.Uk)("详细的分析，请👇"),Ms=(0,l.Uk)("moduleIds 选项配置"),xs=(0,l.Uk)("。"),Os=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"有关于 chunkIds")],-1),Is=(0,l.Uk)("详细的分析，请👇"),Ts=(0,l.Uk)("chunkIds 选项配置"),js=(0,l.Uk)("。"),Ss=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"nodeEnv")],-1),As=(0,l.Uk)("详细的分析，请👇"),Ds=(0,l.Uk)("nodeEnv 选项配置"),Rs=(0,l.Uk)("。"),Ns=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"minimize")],-1),_s=(0,l.Uk)("详细的分析，请👇"),Ls=(0,l.Uk)("minimize 选项配置"),Js=(0,l.Uk)("。"),Hs=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"TemplatedPathPlugin")],-1),$s=(0,l.Uk)("详细的分析，请👇"),Vs=(0,l.Uk)("minimize 选项配置"),Ys=(0,l.Uk)("。"),Gs=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"RecordIdsPlugin")],-1),Ks=(0,l.Uk)("详细的分析，请👇"),Qs=(0,l.Uk)("portableRecords 选项配置"),Xs=(0,l.Uk)("。"),Zs=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"WarnCaseSensitiveModulesPlugin")],-1),sn=(0,l.Uk)("详细的分析，请👇"),nn=(0,l.Uk)("WarnCaseSensitiveModulesPlugin"),an=(0,l.Uk)("。"),ln=(0,l.uE)('<h3 id="第十步-options-performance" tabindex="-1"><a class="header-anchor" href="#第十步-options-performance" aria-hidden="true">#</a> 第十步：options.performance</h3><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.performance) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SizeLimitsPlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./performance/SizeLimitsPlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SizeLimitsPlugin</span><span style="color:#E1E4E8;">(options.performance).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div>',2),pn=(0,l.Uk)("详细的分析，请👇"),on=(0,l.Uk)("performance 配置项"),en=(0,l.Uk)("。"),En=(0,l.uE)('<h2 id="最后一步" tabindex="-1"><a class="header-anchor" href="#最后一步" aria-hidden="true">#</a> 最后一步</h2><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#E1E4E8;">compiler.hooks.afterPlugins.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">compiler.inputFileSystem) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;No input filesystem provided&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"><span style="color:#E1E4E8;">compiler.resolverFactory.hooks.resolveOptions</span></span>\n<span class="line"><span style="color:#E1E4E8;">  .</span><span style="color:#B392F0;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;normal&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">  .</span><span style="color:#B392F0;">tap</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;WebpackOptionsApply&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">resolveOptions</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">assign</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">      {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        fileSystem: compiler.inputFileSystem</span></span>\n<span class="line"><span style="color:#E1E4E8;">      },</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">cachedCleverMerge</span><span style="color:#E1E4E8;">(options.resolve, resolveOptions)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    );</span></span>\n<span class="line"><span style="color:#E1E4E8;">  });</span></span>\n<span class="line"><span style="color:#E1E4E8;">compiler.resolverFactory.hooks.resolveOptions</span></span>\n<span class="line"><span style="color:#E1E4E8;">  .</span><span style="color:#B392F0;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;context&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">  .</span><span style="color:#B392F0;">tap</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;WebpackOptionsApply&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">resolveOptions</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">assign</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">      {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        fileSystem: compiler.inputFileSystem,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        resolveToContext: </span><span style="color:#79B8FF;">true</span></span>\n<span class="line"><span style="color:#E1E4E8;">      },</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">cachedCleverMerge</span><span style="color:#E1E4E8;">(options.resolve, resolveOptions)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    );</span></span>\n<span class="line"><span style="color:#E1E4E8;">  });</span></span>\n<span class="line"><span style="color:#E1E4E8;">compiler.resolverFactory.hooks.resolveOptions</span></span>\n<span class="line"><span style="color:#E1E4E8;">  .</span><span style="color:#B392F0;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;loader&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">  .</span><span style="color:#B392F0;">tap</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;WebpackOptionsApply&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">resolveOptions</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">assign</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">      {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        fileSystem: compiler.inputFileSystem</span></span>\n<span class="line"><span style="color:#E1E4E8;">      },</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">cachedCleverMerge</span><span style="color:#E1E4E8;">(options.resolveLoader, resolveOptions)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    );</span></span>\n<span class="line"><span style="color:#E1E4E8;">  });</span></span>\n<span class="line"><span style="color:#E1E4E8;">compiler.hooks.afterResolvers.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"></span></code></pre></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>综上可以看出 webpack 内置的插件非常非常多，不过对于我们这个例子，很多 options 没有命中，所以不会那么复杂，上面也有针对配置项级别的分析，可以让你更好的去理解 webpack。</p><p>在执行完 <code>webpackOptionsApply.process</code> 之后，所有的插件都已经利用 hooks 钩入了 webpack 构建流程当中，是时候启动 compiler 进行构建来激活所有插件。</p>',5),tn={render:function(s,n){const a=(0,l.up)("RouterLink");return(0,l.wg)(),(0,l.j4)(l.HY,null,[p,(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,[o,(0,l.Wm)("p",null,[e,(0,l.Wm)(a,{to:"/webpack4/internal-plugins/jsonpChunkTemplate/JsonpTemplatePlugin.html"},{default:(0,l.w5)((()=>[E])),_:1}),t])]),c,(0,l.Wm)("li",null,[r,y,(0,l.Wm)("p",null,[i,(0,l.Wm)(a,{to:"/webpack4/configuration/node/"},{default:(0,l.w5)((()=>[u])),_:1}),F])]),m]),d,(0,l.Wm)("p",null,[g,(0,l.Wm)(a,{to:"/webpack4/configuration/output/library&libraryTarget.html"},{default:(0,l.w5)((()=>[B])),_:1}),h]),k,(0,l.Wm)("p",null,[q,(0,l.Wm)(a,{to:"/webpack4/configuration/externals/"},{default:(0,l.w5)((()=>[C])),_:1}),P]),f,(0,l.Wm)("p",null,[v,(0,l.Wm)(a,{to:"/webpack4/configuration/devtool/"},{default:(0,l.w5)((()=>[w])),_:1}),b]),W,(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,[U,(0,l.Wm)("p",null,[z,(0,l.Wm)(a,{to:"/webpack4/internal-plugins/entry/EntryOptionPlugin.html"},{default:(0,l.w5)((()=>[M])),_:1}),x])])]),O,(0,l.Wm)("p",null,[I,(0,l.Wm)(a,{to:"/webpack4/configuration/mode.html"},{default:(0,l.w5)((()=>[T])),_:1}),j]),S,(0,l.Wm)("ol",null,[(0,l.Wm)("li",null,[A,(0,l.Wm)("p",null,[D,(0,l.Wm)(a,{to:"/webpack4/internal-plugins/EnsureChunkConditionsPlugin.html"},{default:(0,l.w5)((()=>[R])),_:1}),N])]),(0,l.Wm)("li",null,[_,(0,l.Wm)("p",null,[L,(0,l.Wm)(a,{to:"/webpack4/configuration/optimization/removeAvailableModules.html"},{default:(0,l.w5)((()=>[J])),_:1}),H])]),(0,l.Wm)("li",null,[$,(0,l.Wm)("p",null,[V,(0,l.Wm)(a,{to:"/webpack4/configuration/optimization/removeEmptyChunks.html"},{default:(0,l.w5)((()=>[Y])),_:1}),G])]),(0,l.Wm)("li",null,[K,(0,l.Wm)("p",null,[Q,(0,l.Wm)(a,{to:"/webpack4/configuration/optimization/mergeDuplicateChunks.html"},{default:(0,l.w5)((()=>[X])),_:1}),Z])]),(0,l.Wm)("li",null,[ss,(0,l.Wm)("p",null,[ns,(0,l.Wm)(a,{to:"/webpack4/configuration/optimization/flagIncludedChunks.html"},{default:(0,l.w5)((()=>[as])),_:1}),ls])]),(0,l.Wm)("li",null,[ps,(0,l.Wm)("p",null,[os,(0,l.Wm)(a,{to:"/webpack4/configuration/optimization/sideEffects.html"},{default:(0,l.w5)((()=>[es])),_:1}),Es])]),(0,l.Wm)("li",null,[ts,(0,l.Wm)("p",null,[cs,(0,l.Wm)(a,{to:"/webpack4/configuration/optimization/providedExports&usedExports.html"},{default:(0,l.w5)((()=>[rs])),_:1}),ys])]),(0,l.Wm)("li",null,[is,(0,l.Wm)("p",null,[us,(0,l.Wm)(a,{to:"/webpack4/configuration/optimization/concatenateModules.html"},{default:(0,l.w5)((()=>[Fs])),_:1}),ms])]),(0,l.Wm)("li",null,[ds,(0,l.Wm)("p",null,[gs,(0,l.Wm)(a,{to:"/webpack4/configuration/optimization/splitChunks.html"},{default:(0,l.w5)((()=>[Bs])),_:1}),hs])]),(0,l.Wm)("li",null,[ks,(0,l.Wm)("p",null,[qs,(0,l.Wm)(a,{to:"/webpack4/configuration/optimization/runtimeChunk.html"},{default:(0,l.w5)((()=>[Cs])),_:1}),Ps])]),(0,l.Wm)("li",null,[fs,(0,l.Wm)("p",null,[vs,(0,l.Wm)(a,{to:"/webpack4/configuration/optimization/splitChunks.html"},{default:(0,l.w5)((()=>[ws])),_:1}),bs])]),Ws,(0,l.Wm)("li",null,[Us,(0,l.Wm)("p",null,[zs,(0,l.Wm)(a,{to:"/webpack4/configuration/optimization/namedModules&moduleIds&occurrenceOrder&hashedModuleIds.html"},{default:(0,l.w5)((()=>[Ms])),_:1}),xs])]),(0,l.Wm)("li",null,[Os,(0,l.Wm)("p",null,[Is,(0,l.Wm)(a,{to:"/webpack4/configuration/optimization/namedChunks&chunkIds&occurrenceOrder.html"},{default:(0,l.w5)((()=>[Ts])),_:1}),js])]),(0,l.Wm)("li",null,[Ss,(0,l.Wm)("p",null,[As,(0,l.Wm)(a,{to:"/webpack4/configuration/optimization/nodeEnv.html"},{default:(0,l.w5)((()=>[Ds])),_:1}),Rs])]),(0,l.Wm)("li",null,[Ns,(0,l.Wm)("p",null,[_s,(0,l.Wm)(a,{to:"/webpack4/configuration/optimization/minimize.html"},{default:(0,l.w5)((()=>[Ls])),_:1}),Js])]),(0,l.Wm)("li",null,[Hs,(0,l.Wm)("p",null,[$s,(0,l.Wm)(a,{to:"/webpack4/internal-plugins/TemplatedPathPlugin.html"},{default:(0,l.w5)((()=>[Vs])),_:1}),Ys])]),(0,l.Wm)("li",null,[Gs,(0,l.Wm)("p",null,[Ks,(0,l.Wm)(a,{to:"/webpack4/configuration/optimization/portableRecords.html"},{default:(0,l.w5)((()=>[Qs])),_:1}),Xs])]),(0,l.Wm)("li",null,[Zs,(0,l.Wm)("p",null,[sn,(0,l.Wm)(a,{to:"/webpack4/internal-plugins/WarnCaseSensitiveModulesPlugin.html"},{default:(0,l.w5)((()=>[nn])),_:1}),an])])]),ln,(0,l.Wm)("p",null,[pn,(0,l.Wm)(a,{to:"/webpack4/configuration/performance.html"},{default:(0,l.w5)((()=>[on])),_:1}),en]),En],64)}}}}]);
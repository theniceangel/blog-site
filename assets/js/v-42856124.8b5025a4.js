(self.webpackChunkblog_site=self.webpackChunkblog_site||[]).push([[2687],{8475:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>p});const p={key:"v-42856124",path:"/webpack4/internal-plugins/jsonpChunkTemplate/JsonpTemplatePlugin.html",title:"JsonpTemplatePlugin",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"webpack4/internal-plugins/jsonpChunkTemplate/JsonpTemplatePlugin.md",git:{updatedTime:1630856917e3,contributors:[{name:"jizhi",email:"jizhi@didiglobal.com",commits:1}]}}},6843:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>l});const p=(0,a(6252).uE)('<h1 id="jsonptemplateplugin" tabindex="-1"><a class="header-anchor" href="#jsonptemplateplugin" aria-hidden="true">#</a> JsonpTemplatePlugin</h1><details class="custom-container details"><summary>lib/web/JsonpTemplatePlugin.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">JsonpMainTemplatePlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./JsonpMainTemplatePlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">JsonpChunkTemplatePlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./JsonpChunkTemplatePlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">JsonpHotUpdateChunkTemplatePlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./JsonpHotUpdateChunkTemplatePlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JsonpTemplatePlugin</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">compiler</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    compiler.hooks.thisCompilation.</span><span style="color:#B392F0;">tap</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;JsonpTemplatePlugin&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">compilation</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 给带有 runtime 代码的 chunk 来生成代码</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JsonpMainTemplatePlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compilation.mainTemplate);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 给不包含 runtime 代码的 chunk 来生成代码</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JsonpChunkTemplatePlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compilation.chunkTemplate);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 给 hmr 更新后的 chunk 来生成代码</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JsonpHotUpdateChunkTemplatePlugin</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">        compilation.hotUpdateChunkTemplate</span></span>\n<span class="line"><span style="color:#E1E4E8;">      );</span></span>\n<span class="line"><span style="color:#E1E4E8;">    });</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div></details><p>JsonpTemplatePlugin 只是对 <code>JsonpMainTemplatePlugin</code>、<code>JsonpChunkTemplatePlugin</code>、<code>JsonpHotUpdateChunkTemplatePlugin</code> 这三个插件进行了聚合。</p><ul><li><p><strong><code>JsonpMainTemplatePlugin</code></strong></p><p>// TODO</p></li><li><p><strong><code>JsonpChunkTemplatePlugin</code></strong></p><p>// TODO</p></li><li><p><strong><code>JsonpHotUpdateChunkTemplatePlugin</code></strong></p><p>// TODO</p></li></ul>',4),l={render:function(s,n){return p}}}}]);
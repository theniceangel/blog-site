(self.webpackChunkblog_site=self.webpackChunkblog_site||[]).push([[7898],{3876:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>l});const l={key:"v-60133699",path:"/webpack4/term/module.html",title:"module",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"normalModule",slug:"normalmodule",children:[]},{level:2,title:"multiModule",slug:"multimodule",children:[]},{level:2,title:"externalModule",slug:"externalmodule",children:[]},{level:2,title:"dllModule",slug:"dllmodule",children:[]},{level:2,title:"delegatedModule",slug:"delegatedmodule",children:[]},{level:2,title:"DependenciesBlock",slug:"dependenciesblock",children:[]},{level:2,title:"entryModule",slug:"entrymodule",children:[]},{level:2,title:"关于 module 的类",slug:"关于-module-的类",children:[]}],filePathRelative:"webpack4/term/module.md",git:{updatedTime:1630856917e3,contributors:[{name:"jizhi",email:"jizhi@didiglobal.com",commits:5}]}}},3086:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>b});var l=a(6252);const p=(0,l.Wm)("h1",{id:"module",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#module","aria-hidden":"true"},"#"),(0,l.Uk)(" module")],-1),o=(0,l.Wm)("p",null,"webpack 内部万物皆是 module，只不过有多种类型的 module。",-1),e={class:"table-of-contents"},E=(0,l.Uk)("normalModule"),t=(0,l.Uk)("multiModule"),c=(0,l.Uk)("externalModule"),r=(0,l.Uk)("dllModule"),y=(0,l.Uk)("delegatedModule"),F=(0,l.Uk)("DependenciesBlock"),i=(0,l.Uk)("entryModule"),u=(0,l.Uk)("关于 module 的类"),B=(0,l.uE)('<h2 id="normalmodule" tabindex="-1"><a class="header-anchor" href="#normalmodule" aria-hidden="true">#</a> normalModule</h2><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#6A737D;">// index.js</span></span>\n<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./a.js&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// a.js</span></span>\n<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;a&#39;</span></span>\n<span class="line"></span></code></pre></div><p>在这个例子中，index.js 作为 webpack 的入口文件，其中 a.js 就是一个 normalModule。运行 webpack 打包之后：</p><details class="custom-container details"><summary>webpack.config.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;path&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&quot;development&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  context: __dirname,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  entry: </span><span style="color:#9ECBFF;">&#39;./index.js&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  output: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    path: path.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(__dirname, </span><span style="color:#9ECBFF;">&quot;dist&quot;</span><span style="color:#E1E4E8;">),</span></span>\n<span class="line"><span style="color:#E1E4E8;">    filename: </span><span style="color:#9ECBFF;">&quot;[name].js&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  },</span></span>\n<span class="line"><span style="color:#E1E4E8;">  optimization: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    minimize: </span><span style="color:#79B8FF;">false</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">};</span></span>\n<span class="line"></span></code></pre></div></details><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">modules</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">// webpackBootstrap</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// ...... 省略其他代码</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"><span style="color:#6A737D;">/************************************************************************/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> ({ </span><span style="color:#6A737D;">// a 模块就是一个 normalModel</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./a.js&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/*!**************!*\\</span></span>\n<span class="line"><span style="color:#6A737D;">  !*** ./a.js ***!</span></span>\n<span class="line"><span style="color:#6A737D;">  \\**************/</span></span>\n<span class="line"><span style="color:#6A737D;">/*! exports provided: default */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_exports__</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_require__</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#9ECBFF;">&quot;use strict&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#79B8FF;">eval</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;__webpack_require__.r(__webpack_exports__);</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">/* harmony default export */ __webpack_exports__[</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">default</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">] = (&#39;a&#39;);</span><span style="color:#79B8FF;">\\n\\n</span><span style="color:#9ECBFF;">//# sourceURL=webpack:///./a.js?&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> }),</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./index.js&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/*!******************!*\\</span></span>\n<span class="line"><span style="color:#6A737D;">  !*** ./index.js ***!</span></span>\n<span class="line"><span style="color:#6A737D;">  \\******************/</span></span>\n<span class="line"><span style="color:#6A737D;">/*! no exports provided */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_exports__</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_require__</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#9ECBFF;">&quot;use strict&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#79B8FF;">eval</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;__webpack_require__.r(__webpack_exports__);</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">/* harmony import */ var _a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./a.js */ </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">./a.js</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">);</span><span style="color:#79B8FF;">\\n\\n\\n</span><span style="color:#9ECBFF;">//# sourceURL=webpack:///./index.js?&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"></span></code></pre></div><h2 id="multimodule" tabindex="-1"><a class="header-anchor" href="#multimodule" aria-hidden="true">#</a> multiModule</h2><p>webpack entry 配置成数组，会生成 multiModule，举个例子：</p><details class="custom-container details"><summary>webpack.config.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;path&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&quot;development&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  context: __dirname,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  devtool: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  entry: [</span><span style="color:#9ECBFF;">&#39;./a.js&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;./b.js&#39;</span><span style="color:#E1E4E8;">],</span></span>\n<span class="line"><span style="color:#E1E4E8;">  output: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    path: path.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(__dirname, </span><span style="color:#9ECBFF;">&quot;dist&quot;</span><span style="color:#E1E4E8;">),</span></span>\n<span class="line"><span style="color:#E1E4E8;">    filename: </span><span style="color:#9ECBFF;">&quot;[name].js&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  },</span></span>\n<span class="line"><span style="color:#E1E4E8;">  optimization: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    minimize: </span><span style="color:#79B8FF;">false</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">};</span></span>\n<span class="line"></span></code></pre></div></details><details class="custom-container details"><summary>a.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;a&#39;</span></span>\n<span class="line"></span></code></pre></div></details><details class="custom-container details"><summary>b.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;b&#39;</span></span>\n<span class="line"></span></code></pre></div></details><p>运行 webpack 打包命令之后，会在 dist 目录下面打出 <code>main.js</code>。</p><details class="custom-container details"><summary>dist/main.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">modules</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">// webpackBootstrap</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// The module cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> installedModules </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// The require function</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">moduleId</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Check if module is in cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(installedModules[moduleId]) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> installedModules[moduleId].exports;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Create a new module (and put it into the cache)</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> module </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> installedModules[moduleId] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\ti: moduleId,</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\tl: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\texports: {}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Execute the module function</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\tmodules[moduleId].</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, __webpack_require__);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Flag the module as loaded</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.l </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Return the exports of the module</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// expose the modules object (__webpack_modules__)</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.m </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> modules;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// expose the module cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.c </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> installedModules;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// define getter function for harmony exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">getter</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">__webpack_require__.</span><span style="color:#B392F0;">o</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, name)) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, name, { enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, get: getter });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// define __esModule on exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;undefined&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.toStringTag) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.toStringTag, { value: </span><span style="color:#9ECBFF;">&#39;Module&#39;</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;__esModule&#39;</span><span style="color:#E1E4E8;">, { value: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// create a fake namespace object</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 1: value is a module id, require it</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 2: merge all properties of value into the ns</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 4: return value when already ns object</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 8|1: behave like require</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">t</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(value);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">((mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> value.__esModule) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> ns </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(ns);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(ns, </span><span style="color:#9ECBFF;">&#39;default&#39;</span><span style="color:#E1E4E8;">, { enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, value: value });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> key </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> value) __webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(ns, key, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value[key]; }.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, key));</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ns;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// getDefaultExport function for compatibility with non-harmony modules</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">n</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> getter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.__esModule </span><span style="color:#F97583;">?</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDefault</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&#39;default&#39;</span><span style="color:#E1E4E8;">]; } </span><span style="color:#F97583;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getModuleExports</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">; };</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t__webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(getter, </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">, getter);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> getter;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// Object.prototype.hasOwnProperty.call</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">o</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">object</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">property</span><span style="color:#E1E4E8;">) { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.hasOwnProperty.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(object, property); };</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// __webpack_public_path__</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.p </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// Load entry module and return exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(__webpack_require__.s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"><span style="color:#6A737D;">/************************************************************************/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> ({</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./a.js&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/*!**************!*\\</span></span>\n<span class="line"><span style="color:#6A737D;">  !*** ./a.js ***!</span></span>\n<span class="line"><span style="color:#6A737D;">  \\**************/</span></span>\n<span class="line"><span style="color:#6A737D;">/*! exports provided: default */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_exports__</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_require__</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#9ECBFF;">&quot;use strict&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(__webpack_exports__);</span></span>\n<span class="line"><span style="color:#6A737D;">/* harmony default export */</span><span style="color:#E1E4E8;"> __webpack_exports__[</span><span style="color:#9ECBFF;">&quot;default&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> }),</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./b.js&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/*!**************!*\\</span></span>\n<span class="line"><span style="color:#6A737D;">  !*** ./b.js ***!</span></span>\n<span class="line"><span style="color:#6A737D;">  \\**************/</span></span>\n<span class="line"><span style="color:#6A737D;">/*! exports provided: default */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_exports__</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_require__</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#9ECBFF;">&quot;use strict&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(__webpack_exports__);</span></span>\n<span class="line"><span style="color:#6A737D;">/* harmony default export */</span><span style="color:#E1E4E8;"> __webpack_exports__[</span><span style="color:#9ECBFF;">&quot;default&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&#39;b&#39;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> }),</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/*!***************************!*\\</span></span>\n<span class="line"><span style="color:#6A737D;">  !*** multi ./a.js ./b.js ***!</span></span>\n<span class="line"><span style="color:#6A737D;">  \\***************************/</span></span>\n<span class="line"><span style="color:#6A737D;">/*! no static exports found */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_require__</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">/*! ./a.js */</span><span style="color:#9ECBFF;">&quot;./a.js&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">/*! ./b.js */</span><span style="color:#9ECBFF;">&quot;./b.js&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"></span></code></pre></div></details><p>从打包的代码来看，有一个 <code>multi ./a.js ./b.js</code> 的模块，它是由 webpack 内部的 MultiModule 创建而来，聚合了 a 和 b 模块。相当于声明了一种特殊的 entry，也就是 entry 数组最后一个模块会被暴露出去，类似于：</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#6A737D;">// multi ./a.js ./b.js</span></span>\n<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./a.js&#39;</span></span>\n<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./b.js&#39;</span></span>\n<span class="line"></span></code></pre></div><h2 id="externalmodule" tabindex="-1"><a class="header-anchor" href="#externalmodule" aria-hidden="true">#</a> externalModule</h2><p>externalModule 代表命中了 webpack externals 配置的模块，举个例子：</p><details class="custom-container details"><summary>webpack.config.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;path&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&quot;development&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  context: __dirname,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  devtool: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  entry: </span><span style="color:#9ECBFF;">&#39;./index.js&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  output: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    path: path.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(__dirname, </span><span style="color:#9ECBFF;">&quot;dist&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">  },</span></span>\n<span class="line"><span style="color:#E1E4E8;">  optimization: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    minimize: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  },</span></span>\n<span class="line"><span style="color:#E1E4E8;">  externals: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    jquery: </span><span style="color:#9ECBFF;">&#39;$&#39;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">};</span></span>\n<span class="line"></span></code></pre></div></details><details class="custom-container details"><summary>index.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> $ </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;jquery&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;.my-element&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">animate</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">/* ... */</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span></code></pre></div></details><p>运行 webpack 打包命令之后，在 dist 目录下的文件如下：</p><details class="custom-container details"><summary>main.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">modules</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">// webpackBootstrap</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// The module cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> installedModules </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// The require function</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">moduleId</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Check if module is in cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(installedModules[moduleId]) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> installedModules[moduleId].exports;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Create a new module (and put it into the cache)</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> module </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> installedModules[moduleId] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\ti: moduleId,</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\tl: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\texports: {}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Execute the module function</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\tmodules[moduleId].</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, __webpack_require__);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Flag the module as loaded</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.l </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Return the exports of the module</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// expose the modules object (__webpack_modules__)</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.m </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> modules;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// expose the module cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.c </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> installedModules;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// define getter function for harmony exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">getter</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">__webpack_require__.</span><span style="color:#B392F0;">o</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, name)) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, name, { enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, get: getter });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// define __esModule on exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;undefined&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.toStringTag) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.toStringTag, { value: </span><span style="color:#9ECBFF;">&#39;Module&#39;</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;__esModule&#39;</span><span style="color:#E1E4E8;">, { value: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// create a fake namespace object</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 1: value is a module id, require it</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 2: merge all properties of value into the ns</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 4: return value when already ns object</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 8|1: behave like require</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">t</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(value);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">((mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> value.__esModule) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> ns </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(ns);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(ns, </span><span style="color:#9ECBFF;">&#39;default&#39;</span><span style="color:#E1E4E8;">, { enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, value: value });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> key </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> value) __webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(ns, key, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value[key]; }.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, key));</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ns;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// getDefaultExport function for compatibility with non-harmony modules</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">n</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> getter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.__esModule </span><span style="color:#F97583;">?</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDefault</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&#39;default&#39;</span><span style="color:#E1E4E8;">]; } </span><span style="color:#F97583;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getModuleExports</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">; };</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t__webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(getter, </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">, getter);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> getter;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// Object.prototype.hasOwnProperty.call</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">o</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">object</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">property</span><span style="color:#E1E4E8;">) { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.hasOwnProperty.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(object, property); };</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// __webpack_public_path__</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.p </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// Load entry module and return exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(__webpack_require__.s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./index.js&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"><span style="color:#6A737D;">/************************************************************************/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> ({</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./index.js&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/*!******************!*\\</span></span>\n<span class="line"><span style="color:#6A737D;">  !*** ./index.js ***!</span></span>\n<span class="line"><span style="color:#6A737D;">  \\******************/</span></span>\n<span class="line"><span style="color:#6A737D;">/*! no exports provided */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_exports__</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_require__</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#9ECBFF;">&quot;use strict&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(__webpack_exports__);</span></span>\n<span class="line"><span style="color:#6A737D;">/* harmony import */</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> jquery__WEBPACK_IMPORTED_MODULE_0__ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">/*! jquery */</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;jquery&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/* harmony import */</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> jquery__WEBPACK_IMPORTED_MODULE_0___default </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">/*#__PURE__*/</span><span style="color:#E1E4E8;">__webpack_require__.</span><span style="color:#B392F0;">n</span><span style="color:#E1E4E8;">(jquery__WEBPACK_IMPORTED_MODULE_0__);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#B392F0;">jquery__WEBPACK_IMPORTED_MODULE_0___default</span><span style="color:#E1E4E8;">()(</span><span style="color:#9ECBFF;">&#39;.my-element&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">animate</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">/* ... */</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> }),</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;jquery&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/*!********************!*\\</span></span>\n<span class="line"><span style="color:#6A737D;">  !*** external &quot;$&quot; ***!</span></span>\n<span class="line"><span style="color:#6A737D;">  \\********************/</span></span>\n<span class="line"><span style="color:#6A737D;">/*! no static exports found */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"></span></code></pre></div></details><p>jquery 模块就是 external module，它的模块导出受到 webpack externals 的影响，被替换成 <code>&quot;$&quot;</code> 了，代表 window 下面必须前置定义了 <code>$</code> 的实现，要不然会报错。我们一般是自己在 html 引入 jquery 的 cdn，再引入打包后的 js，这样 jquery 就能 cdn 利用长期缓存。</p><p>但是模块的导出并不一定是字符串，它是受到 output.libraryTarget 的影响，如果将 output.libraryTarget 配置成 <code>commonjs2</code>，那 jquery 的模块导出就变成下面这种形式了。</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;jquery&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/*!********************!*\\</span></span>\n<span class="line"><span style="color:#6A737D;">    !*** external &quot;$&quot; ***!</span></span>\n<span class="line"><span style="color:#6A737D;">    \\********************/</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/*! no static exports found */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;$&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  })</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div><p>这种情况一般是用在开发 library 的时候，希望 Application 在引用这个 library 的时候，随着 Application 一起打包，这样可以做一定的优化，比如开发的 library 依赖 babel transpile，跟随着 Application 一起打包可以减少 babel 的冗余代码。</p><p>// TODO 开一篇文章补充 externals 的详细配置</p><h2 id="dllmodule" tabindex="-1"><a class="header-anchor" href="#dllmodule" aria-hidden="true">#</a> dllModule</h2><p>\b开启 DllPlugin 配置之后，webpack 内部会包含 dllModule，举个例子：</p><details class="custom-container details"><summary>webpack.config.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;path&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> webpack </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;webpack&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  resolve: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    extensions: [</span><span style="color:#9ECBFF;">&quot;.js&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;.jsx&quot;</span><span style="color:#E1E4E8;">]</span></span>\n<span class="line"><span style="color:#E1E4E8;">  },</span></span>\n<span class="line"><span style="color:#E1E4E8;">  context: __dirname,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  entry: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    alpha: [</span><span style="color:#9ECBFF;">&quot;./a&quot;</span><span style="color:#E1E4E8;">], </span><span style="color:#6A737D;">// alpha value 必须是一个数组</span></span>\n<span class="line"><span style="color:#E1E4E8;">  },</span></span>\n<span class="line"><span style="color:#E1E4E8;">  output: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    path: path.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(__dirname, </span><span style="color:#9ECBFF;">&quot;dist&quot;</span><span style="color:#E1E4E8;">),</span></span>\n<span class="line"><span style="color:#E1E4E8;">    filename: </span><span style="color:#9ECBFF;">&quot;MyDll.[name].js&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    library: </span><span style="color:#9ECBFF;">&quot;__MYDLL__&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  },</span></span>\n<span class="line"><span style="color:#E1E4E8;">  optimization: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    minimize: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  },</span></span>\n<span class="line"><span style="color:#E1E4E8;">  plugins: [</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> webpack.</span><span style="color:#B392F0;">DllPlugin</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">      path: path.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(__dirname, </span><span style="color:#9ECBFF;">&quot;dist&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;[name]-manifest.json&quot;</span><span style="color:#E1E4E8;">),</span></span>\n<span class="line"><span style="color:#E1E4E8;">      name: </span><span style="color:#9ECBFF;">&quot;__MYDLL__&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    })</span></span>\n<span class="line"><span style="color:#E1E4E8;">  ]</span></span>\n<span class="line"><span style="color:#E1E4E8;">};</span></span>\n<span class="line"></span></code></pre></div></details><details class="custom-container details"><summary>a.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span></code></pre></div></details><p>运行 webpack 打包命令之后，webpack 内部会生成一个 dllModule，它的作用就是用来返回 <code>__webpack_require__</code> 函数，方便其他的应用程序引用内部的模块，打包出来的代码如下：</p><details class="custom-container details"><summary>dist/MyDll.alpha.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> __MYDLL__ </span><span style="color:#F97583;">=</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">modules</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">// webpackBootstrap</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// The module cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> installedModules </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// The require function</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">moduleId</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Check if module is in cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(installedModules[moduleId]) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> installedModules[moduleId].exports;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Create a new module (and put it into the cache)</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> module </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> installedModules[moduleId] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\ti: moduleId,</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\tl: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\texports: {}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Execute the module function</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\tmodules[moduleId].</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, __webpack_require__);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Flag the module as loaded</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.l </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Return the exports of the module</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// expose the modules object (__webpack_modules__)</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.m </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> modules;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// expose the module cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.c </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> installedModules;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// define getter function for harmony exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">getter</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">__webpack_require__.</span><span style="color:#B392F0;">o</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, name)) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, name, { enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, get: getter });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// define __esModule on exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;undefined&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.toStringTag) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.toStringTag, { value: </span><span style="color:#9ECBFF;">&#39;Module&#39;</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;__esModule&#39;</span><span style="color:#E1E4E8;">, { value: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// create a fake namespace object</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 1: value is a module id, require it</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 2: merge all properties of value into the ns</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 4: return value when already ns object</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 8|1: behave like require</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">t</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(value);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">((mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> value.__esModule) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> ns </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(ns);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(ns, </span><span style="color:#9ECBFF;">&#39;default&#39;</span><span style="color:#E1E4E8;">, { enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, value: value });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> key </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> value) __webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(ns, key, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value[key]; }.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, key));</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ns;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// getDefaultExport function for compatibility with non-harmony modules</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">n</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> getter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.__esModule </span><span style="color:#F97583;">?</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDefault</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&#39;default&#39;</span><span style="color:#E1E4E8;">]; } </span><span style="color:#F97583;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getModuleExports</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">; };</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t__webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(getter, </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">, getter);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> getter;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// Object.prototype.hasOwnProperty.call</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">o</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">object</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">property</span><span style="color:#E1E4E8;">) { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.hasOwnProperty.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(object, property); };</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// __webpack_public_path__</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.p </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// Load entry module and return exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(__webpack_require__.s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"><span style="color:#6A737D;">/************************************************************************/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> ([</span></span>\n<span class="line"><span style="color:#6A737D;">/* 0 */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_require__</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> __webpack_require__;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> }),</span></span>\n<span class="line"><span style="color:#6A737D;">/* 1 */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> ]);</span></span>\n<span class="line"></span></code></pre></div></details><p>其中 dllModule 就是生成 module id 为 0 的模块，主要是将 <code>__webpack_require__</code> 赋值给 webpack library 配置的 <code>&#39;__MYDLL__&#39;</code>，这样其他的应用程序就可以消费里面的 module，比如 module id 为 1 的模块，也就是 webpack entry 配置的 <code>[&#39;./a.js&#39;]</code>。</p><p>// TODO 后期得新开一篇文章讲解 DllPlugin 的整体流程。</p><h2 id="delegatedmodule" tabindex="-1"><a class="header-anchor" href="#delegatedmodule" aria-hidden="true">#</a> delegatedModule</h2><p>DllReferencePlugin 一般搭配 DllPlugin 使用，内部使用了 DelegatedModule，delegatedModule 的生成是为了消费上述 <code>dist/MyDll.alpha.js</code> 含有的 module，主要的作用是对现有程序里面的模块做代理，这样就能使用 DllPlugin 打包出来的动态软链文件中的模块了。基于上述 dllModule 的代码新增以下代码。</p><details class="custom-container details"><summary>新增 webpack.config.ref.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;path&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> webpack </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;webpack&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  context: __dirname,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  entry: </span><span style="color:#9ECBFF;">&#39;./index.js&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  output: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    path: path.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(__dirname, </span><span style="color:#9ECBFF;">&quot;dist&quot;</span><span style="color:#E1E4E8;">),</span></span>\n<span class="line"><span style="color:#E1E4E8;">    filename: </span><span style="color:#9ECBFF;">&quot;[name].js&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  },</span></span>\n<span class="line"><span style="color:#E1E4E8;">  optimization: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    minimize: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  },</span></span>\n<span class="line"><span style="color:#E1E4E8;">  plugins: [</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> webpack.</span><span style="color:#B392F0;">DllReferencePlugin</span><span style="color:#E1E4E8;">({ </span><span style="color:#6A737D;">// 消费 dist/MyDll.alpha.js</span></span>\n<span class="line"><span style="color:#E1E4E8;">      context: __dirname,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      manifest: </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./dist/alpha-manifest.json&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// eslint-disable-line</span></span>\n<span class="line"><span style="color:#E1E4E8;">    })</span></span>\n<span class="line"><span style="color:#E1E4E8;">  ]</span></span>\n<span class="line"><span style="color:#E1E4E8;">};</span></span>\n<span class="line"></span></code></pre></div></details><details class="custom-container details"><summary>index.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./a.js&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 这个模块会变成 delegatedModule 而不是原本的 normalModule</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;消费 dll bundle&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"></span></code></pre></div></details><p>\b运行 webpack 打包命令之后，在 dist 目录下会生成 <code>main.js</code>。</p><details class="custom-container details"><summary>dist/main.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">modules</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">// webpackBootstrap</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// The module cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> installedModules </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// The require function</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">moduleId</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Check if module is in cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(installedModules[moduleId]) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> installedModules[moduleId].exports;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Create a new module (and put it into the cache)</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> module </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> installedModules[moduleId] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\ti: moduleId,</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\tl: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\texports: {}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Execute the module function</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\tmodules[moduleId].</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, __webpack_require__);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Flag the module as loaded</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.l </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Return the exports of the module</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// expose the modules object (__webpack_modules__)</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.m </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> modules;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// expose the module cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.c </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> installedModules;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// define getter function for harmony exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">getter</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">__webpack_require__.</span><span style="color:#B392F0;">o</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, name)) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, name, { enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, get: getter });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// define __esModule on exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;undefined&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.toStringTag) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.toStringTag, { value: </span><span style="color:#9ECBFF;">&#39;Module&#39;</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;__esModule&#39;</span><span style="color:#E1E4E8;">, { value: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// create a fake namespace object</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 1: value is a module id, require it</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 2: merge all properties of value into the ns</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 4: return value when already ns object</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 8|1: behave like require</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">t</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(value);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">((mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> value.__esModule) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> ns </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(ns);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(ns, </span><span style="color:#9ECBFF;">&#39;default&#39;</span><span style="color:#E1E4E8;">, { enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, value: value });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> key </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> value) __webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(ns, key, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value[key]; }.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, key));</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ns;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// getDefaultExport function for compatibility with non-harmony modules</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">n</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> getter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.__esModule </span><span style="color:#F97583;">?</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDefault</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&#39;default&#39;</span><span style="color:#E1E4E8;">]; } </span><span style="color:#F97583;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getModuleExports</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">; };</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t__webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(getter, </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">, getter);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> getter;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// Object.prototype.hasOwnProperty.call</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">o</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">object</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">property</span><span style="color:#E1E4E8;">) { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.hasOwnProperty.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(object, property); };</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// __webpack_public_path__</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.p </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// Load entry module and return exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(__webpack_require__.s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"><span style="color:#6A737D;">/************************************************************************/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> ([</span></span>\n<span class="line"><span style="color:#6A737D;">/* 0 */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_exports__</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_require__</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#9ECBFF;">&quot;use strict&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(__webpack_exports__);</span></span>\n<span class="line"><span style="color:#6A737D;">/* harmony import */</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> _a_js__WEBPACK_IMPORTED_MODULE_0__ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/* harmony import */</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> _a_js__WEBPACK_IMPORTED_MODULE_0___default </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">/*#__PURE__*/</span><span style="color:#E1E4E8;">__webpack_require__.</span><span style="color:#B392F0;">n</span><span style="color:#E1E4E8;">(_a_js__WEBPACK_IMPORTED_MODULE_0__);</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;消费 dll bundle&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> }),</span></span>\n<span class="line"><span style="color:#6A737D;">/* 1 */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_require__</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">))(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> }),</span></span>\n<span class="line"><span style="color:#6A737D;">/* 2 */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> __MYDLL__;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> ]);</span></span>\n<span class="line"></span></code></pre></div></details><p>其中 module id 为 1 的模块就是 delegatedModule，对应于上面的 <code>import &#39;./a.js&#39;</code>，module id 为 2 的模块是一个 externalModule，主要是为了连接上述的 <code>dist/MyDll.alpha.js</code> 中的逻辑，所以必须得先手动在 html 引入 <code>MyDll.alpha.js</code> 文件，再引入 <code>dist/main.js</code>。</p><p>// TODO 后期得新开一篇文章讲解 DllReferencePlugin 的整体流程。</p><h2 id="dependenciesblock" tabindex="-1"><a class="header-anchor" href="#dependenciesblock" aria-hidden="true">#</a> DependenciesBlock</h2><p>DependenciesBlock 是以上各种模块类的基类，它给这些模块增强了以下属性：</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DependenciesBlock</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">constructor</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []; </span><span style="color:#6A737D;">// 当前模块的依赖</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.blocks </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []; </span><span style="color:#6A737D;">// 当前模块的代码分割点</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.variables </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []; </span><span style="color:#6A737D;">// 当前模块是否用了 __filename, __dirname, __resourceQuery, __webpack_amd_options__ 等内置变量，也有可能通过 webpack 的 node 配置项来注入一些 polyfill，比如 process 的 polyfill</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div><p>比如模块 <code>index.js</code> 的内部结构如下：</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./a.js&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// dependencies 会有关于 a 模块的所有依赖</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./b.js&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// blocks 上会存有 b 模块的异步分割 ImportDependenciesBlock</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> Query </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> __resourceQuery </span><span style="color:#6A737D;">// variables 存有 __resourceQuery 的 dependenciesBlockVariable</span></span>\n<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(Query)</span></span>\n<span class="line"></span></code></pre></div><h2 id="entrymodule" tabindex="-1"><a class="header-anchor" href="#entrymodule" aria-hidden="true">#</a> entryModule</h2><p>entryModule 比较特殊，与上述各种 module 不同，它不是一种<strong>独特类型</strong>的 module，仅仅代表当前 module 是程序的启动点。</p>',48),d=(0,l.uE)('<li><p><strong>字符串 entry 配置</strong></p><p>对于 webpack 单入口的 entry 配置来说，entryModule 就是配置的文件模块，就拿上面的例子来说，<code>index.js</code> 就是一个 entryModule。</p><details class="custom-container details"><summary>main.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">modules</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">// webpackBootstrap</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// The module cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> installedModules </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// The require function</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">moduleId</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Check if module is in cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(installedModules[moduleId]) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> installedModules[moduleId].exports;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Create a new module (and put it into the cache)</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> module </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> installedModules[moduleId] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\ti: moduleId,</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\tl: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\texports: {}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Execute the module function</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\tmodules[moduleId].</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, __webpack_require__);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Flag the module as loaded</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.l </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Return the exports of the module</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// expose the modules object (__webpack_modules__)</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.m </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> modules;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// expose the module cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.c </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> installedModules;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// define getter function for harmony exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">getter</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">__webpack_require__.</span><span style="color:#B392F0;">o</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, name)) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, name, { enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, get: getter });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// define __esModule on exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;undefined&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.toStringTag) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.toStringTag, { value: </span><span style="color:#9ECBFF;">&#39;Module&#39;</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;__esModule&#39;</span><span style="color:#E1E4E8;">, { value: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// create a fake namespace object</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 1: value is a module id, require it</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 2: merge all properties of value into the ns</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 4: return value when already ns object</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 8|1: behave like require</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">t</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(value);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">((mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> value.__esModule) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> ns </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(ns);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(ns, </span><span style="color:#9ECBFF;">&#39;default&#39;</span><span style="color:#E1E4E8;">, { enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, value: value });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> key </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> value) __webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(ns, key, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value[key]; }.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, key));</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ns;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// getDefaultExport function for compatibility with non-harmony modules</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">n</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> getter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.__esModule </span><span style="color:#F97583;">?</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDefault</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&#39;default&#39;</span><span style="color:#E1E4E8;">]; } </span><span style="color:#F97583;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getModuleExports</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">; };</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t__webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(getter, </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">, getter);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> getter;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// Object.prototype.hasOwnProperty.call</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">o</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">object</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">property</span><span style="color:#E1E4E8;">) { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.hasOwnProperty.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(object, property); };</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// __webpack_public_path__</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.p </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// Load entry module and return exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(__webpack_require__.s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./index.js&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"><span style="color:#6A737D;">/************************************************************************/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> ({</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./a.js&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/*!**************!*\\</span></span>\n<span class="line"><span style="color:#6A737D;">  !*** ./a.js ***!</span></span>\n<span class="line"><span style="color:#6A737D;">  \\**************/</span></span>\n<span class="line"><span style="color:#6A737D;">/*! exports provided: default */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_exports__</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_require__</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#9ECBFF;">&quot;use strict&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#79B8FF;">eval</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;__webpack_require__.r(__webpack_exports__);</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">/* harmony default export */ __webpack_exports__[</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">default</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">] = (&#39;a&#39;);</span><span style="color:#79B8FF;">\\n\\n</span><span style="color:#9ECBFF;">//# sourceURL=webpack:///./a.js?&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> }),</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./index.js&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/*!******************!*\\</span></span>\n<span class="line"><span style="color:#6A737D;">  !*** ./index.js ***!</span></span>\n<span class="line"><span style="color:#6A737D;">  \\******************/</span></span>\n<span class="line"><span style="color:#6A737D;">/*! no exports provided */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_exports__</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_require__</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#9ECBFF;">&quot;use strict&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#79B8FF;">eval</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;__webpack_require__.r(__webpack_exports__);</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">/* harmony import */ var _a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./a.js */ </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">./a.js</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">);</span><span style="color:#79B8FF;">\\n\\n\\n</span><span style="color:#9ECBFF;">//# sourceURL=webpack:///./index.js?&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"></span></code></pre></div></details><p><code>index.js</code> 就是 entryModule，程序启动的入口，就是下面这段代码</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(__webpack_require__.s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./index.js&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span></code></pre></div></li><li><p><strong>对象 entry 配置</strong></p><p>对象配置的 entry，代表存在多个 entryModule，因为会有多份 js 文件被打包出来，每一个 js 文件都是程序的入口。</p><details class="custom-container details"><summary>webpack.config.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;path&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&quot;development&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  context: __dirname,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  entry: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    entry1: </span><span style="color:#9ECBFF;">&#39;./entry1.js&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    entry2: </span><span style="color:#9ECBFF;">&#39;./entry2.js&#39;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  },</span></span>\n<span class="line"><span style="color:#E1E4E8;">  output: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    path: path.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(__dirname, </span><span style="color:#9ECBFF;">&quot;dist&quot;</span><span style="color:#E1E4E8;">),</span></span>\n<span class="line"><span style="color:#E1E4E8;">    filename: </span><span style="color:#9ECBFF;">&quot;[name].js&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  },</span></span>\n<span class="line"><span style="color:#E1E4E8;">  optimization: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    minimize: </span><span style="color:#79B8FF;">false</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">};</span></span>\n<span class="line"></span></code></pre></div></details><details class="custom-container details"><summary>entry1.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;entry1&#39;</span></span>\n<span class="line"></span></code></pre></div></details><details class="custom-container details"><summary>entry2.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;entry2&#39;</span></span>\n<span class="line"></span></code></pre></div></details><p>运行 webpack 打包命令之后，会在 dist 目录下面打出 <code>entry1.js</code> 和 <code>entry2.js</code></p><details class="custom-container details"><summary>dist/entry1.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">modules</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">// webpackBootstrap</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// The module cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> installedModules </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// The require function</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">moduleId</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Check if module is in cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(installedModules[moduleId]) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> installedModules[moduleId].exports;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Create a new module (and put it into the cache)</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> module </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> installedModules[moduleId] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\ti: moduleId,</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\tl: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\texports: {}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Execute the module function</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\tmodules[moduleId].</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, __webpack_require__);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Flag the module as loaded</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.l </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Return the exports of the module</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// expose the modules object (__webpack_modules__)</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.m </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> modules;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// expose the module cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.c </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> installedModules;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// define getter function for harmony exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">getter</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">__webpack_require__.</span><span style="color:#B392F0;">o</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, name)) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, name, { enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, get: getter });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// define __esModule on exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;undefined&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.toStringTag) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.toStringTag, { value: </span><span style="color:#9ECBFF;">&#39;Module&#39;</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;__esModule&#39;</span><span style="color:#E1E4E8;">, { value: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// create a fake namespace object</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 1: value is a module id, require it</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 2: merge all properties of value into the ns</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 4: return value when already ns object</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 8|1: behave like require</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">t</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(value);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">((mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> value.__esModule) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> ns </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(ns);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(ns, </span><span style="color:#9ECBFF;">&#39;default&#39;</span><span style="color:#E1E4E8;">, { enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, value: value });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> key </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> value) __webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(ns, key, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value[key]; }.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, key));</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ns;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// getDefaultExport function for compatibility with non-harmony modules</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">n</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> getter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.__esModule </span><span style="color:#F97583;">?</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDefault</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&#39;default&#39;</span><span style="color:#E1E4E8;">]; } </span><span style="color:#F97583;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getModuleExports</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">; };</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t__webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(getter, </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">, getter);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> getter;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// Object.prototype.hasOwnProperty.call</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">o</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">object</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">property</span><span style="color:#E1E4E8;">) { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.hasOwnProperty.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(object, property); };</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// __webpack_public_path__</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.p </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// Load entry module and return exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(__webpack_require__.s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./entry1.js&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"><span style="color:#6A737D;">/************************************************************************/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> ({</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./entry1.js&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/*!*******************!*\\</span></span>\n<span class="line"><span style="color:#6A737D;">  !*** ./entry1.js ***!</span></span>\n<span class="line"><span style="color:#6A737D;">  \\*******************/</span></span>\n<span class="line"><span style="color:#6A737D;">/*! exports provided: default */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_exports__</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_require__</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#9ECBFF;">&quot;use strict&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#79B8FF;">eval</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;__webpack_require__.r(__webpack_exports__);</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">/* harmony default export */ __webpack_exports__[</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">default</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">] = (&#39;entry1&#39;);</span><span style="color:#79B8FF;">\\n\\n</span><span style="color:#9ECBFF;">//# sourceURL=webpack:///./entry1.js?&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"></span></code></pre></div></details><p>可以看到 entry1.js 的程序入口就是 <code>entry1</code> module，它就是 entryModule。</p><details class="custom-container details"><summary>dist/entry2.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">modules</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">// webpackBootstrap</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// The module cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> installedModules </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// The require function</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">moduleId</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Check if module is in cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(installedModules[moduleId]) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> installedModules[moduleId].exports;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Create a new module (and put it into the cache)</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> module </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> installedModules[moduleId] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\ti: moduleId,</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\tl: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\texports: {}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Execute the module function</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\tmodules[moduleId].</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, __webpack_require__);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Flag the module as loaded</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.l </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#6A737D;">// Return the exports of the module</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// expose the modules object (__webpack_modules__)</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.m </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> modules;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// expose the module cache</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.c </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> installedModules;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// define getter function for harmony exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">getter</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">__webpack_require__.</span><span style="color:#B392F0;">o</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, name)) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, name, { enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, get: getter });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// define __esModule on exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;undefined&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.toStringTag) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.toStringTag, { value: </span><span style="color:#9ECBFF;">&#39;Module&#39;</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t}</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;__esModule&#39;</span><span style="color:#E1E4E8;">, { value: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// create a fake namespace object</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 1: value is a module id, require it</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 2: merge all properties of value into the ns</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 4: return value when already ns object</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// mode &amp; 8|1: behave like require</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">t</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mode</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(value);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">((mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> value.__esModule) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> ns </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t__webpack_require__.</span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">(ns);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(ns, </span><span style="color:#9ECBFF;">&#39;default&#39;</span><span style="color:#E1E4E8;">, { enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, value: value });</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mode </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> key </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> value) __webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(ns, key, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value[key]; }.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, key));</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ns;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// getDefaultExport function for compatibility with non-harmony modules</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">n</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> getter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.__esModule </span><span style="color:#F97583;">?</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDefault</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&#39;default&#39;</span><span style="color:#E1E4E8;">]; } </span><span style="color:#F97583;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t\t</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getModuleExports</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">; };</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t__webpack_require__.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(getter, </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">, getter);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t\t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> getter;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t};</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// Object.prototype.hasOwnProperty.call</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.</span><span style="color:#B392F0;">o</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">object</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">property</span><span style="color:#E1E4E8;">) { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.hasOwnProperty.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(object, property); };</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// __webpack_public_path__</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t__webpack_require__.p </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#6A737D;">// Load entry module and return exports</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> \t</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__webpack_require__</span><span style="color:#E1E4E8;">(__webpack_require__.s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./entry2.js&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"><span style="color:#6A737D;">/************************************************************************/</span></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> ({</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./entry2.js&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#6A737D;">/*!*******************!*\\</span></span>\n<span class="line"><span style="color:#6A737D;">  !*** ./entry2.js ***!</span></span>\n<span class="line"><span style="color:#6A737D;">  \\*******************/</span></span>\n<span class="line"><span style="color:#6A737D;">/*! exports provided: default */</span></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_exports__</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">__webpack_require__</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#9ECBFF;">&quot;use strict&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#79B8FF;">eval</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;__webpack_require__.r(__webpack_exports__);</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">/* harmony default export */ __webpack_exports__[</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">default</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">] = (&#39;entry2&#39;);</span><span style="color:#79B8FF;">\\n\\n</span><span style="color:#9ECBFF;">//# sourceURL=webpack:///./entry2.js?&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/***/</span><span style="color:#E1E4E8;"> })</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/******/</span><span style="color:#E1E4E8;"> });</span></span>\n<span class="line"></span></code></pre></div></details><p>同理，entry2 也是 entryModule。</p></li>',2),A=(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"数组 entry 配置")],-1),m=(0,l.Uk)("就如 "),D=(0,l.Uk)("MultiModule"),_=(0,l.Uk)(" 所述，entryModule 其实就是这个 multiModule。"),h=(0,l.Wm)("li",null,[(0,l.Wm)("p",null,[(0,l.Wm)("strong",null,"Dynamic entry 配置")])],-1),f=(0,l.uE)('<p>动态 entry 的场景是为了获取配置的函数的返回值，来决定 entryModule，配置可以是如下的方式：</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#6A737D;">// 返回字符串</span></span>\n<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//...</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">entry</span><span style="color:#E1E4E8;">: () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./demo&#39;</span></span>\n<span class="line"><span style="color:#E1E4E8;">};</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// 返回包含数组的 promise</span></span>\n<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//...</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">entry</span><span style="color:#E1E4E8;">: () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">resolve</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;./demo&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;./demo2&#39;</span><span style="color:#E1E4E8;">]))</span></span>\n<span class="line"><span style="color:#E1E4E8;">};</span></span>\n<span class="line"></span></code></pre></div><p>所以 entryModule 与前面数组、对象、字符串的情况一模一样。</p><ol start="5"><li><strong>使用了 DllPlugin 插件</strong></li></ol><p>如果使用了 DllPlugin 插件，那么 entryModule 就是 webpack 内部的 dllModule，详细的例子可以<a href="#/dllmodule">参考这里</a></p><h2 id="关于-module-的类" tabindex="-1"><a class="header-anchor" href="#关于-module-的类" aria-hidden="true">#</a> 关于 module 的类</h2><ol><li><p><strong>DependenciesBlock</strong></p><details class="custom-container details"><summary>DependenciesBlock.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DependenciesBlock</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">constructor</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Dependency[]}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{AsyncDependenciesBlock[]}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.blocks </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{DependenciesBlockVariable[]}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.variables </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * Adds a DependencyBlock to DependencyBlock relationship.</span></span>\n<span class="line"><span style="color:#6A737D;">  * This is used for when a Module has a AsyncDependencyBlock tie (for code-splitting)</span></span>\n<span class="line"><span style="color:#6A737D;">  *</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{AsyncDependenciesBlock}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">block</span><span style="color:#6A737D;"> block being added</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">addBlock</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">block</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.blocks.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(block);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    block.parent </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">name</span><span style="color:#6A737D;"> name of dependency</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">expression</span><span style="color:#6A737D;"> expression string for variable</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Dependency[]}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">dependencies</span><span style="color:#6A737D;"> dependency instances tied to variable</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">addVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">expression</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">dependencies</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> v </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.variables) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (v.name </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> v.expression </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> expression) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.variables.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DependenciesBlockVariable</span><span style="color:#E1E4E8;">(name, expression, dependencies)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    );</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Dependency}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">dependency</span><span style="color:#6A737D;"> dependency being tied to block.</span></span>\n<span class="line"><span style="color:#6A737D;">  * This is an &quot;edge&quot; pointing to another &quot;node&quot; on module graph.</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">addDependency</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">dependency</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(dependency);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Dependency}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">dependency</span><span style="color:#6A737D;"> dependency being removed</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">removeDependency</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">dependency</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">idx</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies.</span><span style="color:#B392F0;">indexOf</span><span style="color:#E1E4E8;">(dependency);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (idx </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies.</span><span style="color:#B392F0;">splice</span><span style="color:#E1E4E8;">(idx, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Hash}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">hash</span><span style="color:#6A737D;"> the hash used to track dependencies</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">hash</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dep</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies) dep.</span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(hash);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">block</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.blocks) block.</span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(hash);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">variable</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.variables) variable.</span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(hash);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">disconnect</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dep</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies) dep.</span><span style="color:#B392F0;">disconnect</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">block</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.blocks) block.</span><span style="color:#B392F0;">disconnect</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">variable</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.variables) variable.</span><span style="color:#B392F0;">disconnect</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">unseal</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">block</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.blocks) block.</span><span style="color:#B392F0;">unseal</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{DependencyFilterFunction}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">filter</span><span style="color:#6A737D;"> filter function for dependencies, gets passed all dependency ties from current instance</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{boolean}</span><span style="color:#6A737D;"> returns boolean for filter</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">hasDependencies</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">filter</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (filter) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dep</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(dep)) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">block</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.blocks) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (block.</span><span style="color:#B392F0;">hasDependencies</span><span style="color:#E1E4E8;">(filter)) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">variable</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.variables) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (variable.</span><span style="color:#B392F0;">hasDependencies</span><span style="color:#E1E4E8;">(filter)) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">sortItems</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">block</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.blocks) block.</span><span style="color:#B392F0;">sortItems</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div></details><p>如果某个模块作为 code splitting 的分割点，那么它就会带有 DependenciesBlock 信息，比如下面的 a 模块会含有 DependenciesBlock 信息。</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./a.js&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"></span></code></pre></div></li><li><p><strong>Module</strong></p><details class="custom-container details"><summary>Module.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Module</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DependenciesBlock</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">constructor</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">type</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">context</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.type </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> type;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.context </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> context;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Unique Id</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{number}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.debugId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> debugId</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Hash</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.hash </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.renderedHash </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Info from Factory</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{TODO}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.resolveOptions </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">EMPTY_RESOLVE_OPTIONS</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{object}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.factoryMeta </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Info from Build</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{WebpackError[]}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.warnings </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{WebpackError[]}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.errors </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{object}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{object}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Graph (per Compilation)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{ModuleReason[]}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.reasons </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{SortableSet&lt;Chunk&gt;}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SortableSet</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">, sortById);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Info from Compilation (per Compilation)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{number|string}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{number}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.index </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{number}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.index2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{number}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.depth </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Module}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.issuer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{undefined | object}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.profile </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{boolean}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.prefetched </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{boolean}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.built </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Info from Optimization (per Compilation)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{null | boolean}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.used </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{false | true | string[]}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usedExports </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{(string | OptimizationBailoutFunction)[]}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.optimizationBailout </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// delayed operations</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{undefined | {oldChunk: Chunk, newChunks: Chunk[]}[] }</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._rewriteChunkInReasons </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{boolean}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.useSourceMap </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// info from build</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._source </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">exportsArgument</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo.exportsArgument) </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;exports&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">moduleArgument</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo.moduleArgument) </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;module&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">disconnect</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.hash </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.renderedHash </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.reasons.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._rewriteChunkInReasons </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks.</span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.index </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.index2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.depth </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.issuer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.profile </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.prefetched </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.built </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.used </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usedExports </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.optimizationBailout.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">disconnect</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">unseal</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.index </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.index2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.depth </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks.</span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">unseal</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">setChunks</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">chunks</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SortableSet</span><span style="color:#E1E4E8;">(chunks, sortById);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">addChunk</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">chunk</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks.</span><span style="color:#B392F0;">has</span><span style="color:#E1E4E8;">(chunk)) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(chunk);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">removeChunk</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">chunk</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks.</span><span style="color:#B392F0;">delete</span><span style="color:#E1E4E8;">(chunk)) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      chunk.</span><span style="color:#B392F0;">removeModule</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">isInChunk</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">chunk</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks.</span><span style="color:#B392F0;">has</span><span style="color:#E1E4E8;">(chunk);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">isEntryModule</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">chunk</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (chunk.entryModule </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">optional</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.reasons.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.reasons.</span><span style="color:#B392F0;">every</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">r</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> r.dependency </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> r.dependency.optional)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    );</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Chunk[]}</span><span style="color:#6A737D;"> all chunks which contain the module</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">getChunks</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Array</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">getNumberOfChunks</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks.size;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">chunksIterable</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">hasEqualsChunks</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">otherModule</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks.size </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> otherModule._chunks.size) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks.</span><span style="color:#B392F0;">sortWith</span><span style="color:#E1E4E8;">(sortByDebugId);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    otherModule._chunks.</span><span style="color:#B392F0;">sortWith</span><span style="color:#E1E4E8;">(sortByDebugId);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks[</span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.iterator]();</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">b</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> otherModule._chunks[</span><span style="color:#79B8FF;">Symbol</span><span style="color:#E1E4E8;">.iterator]();</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// eslint-disable-next-line no-constant-condition</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">aItem</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">bItem</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> b.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (aItem.done) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (aItem.value </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> bItem.value) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">addReason</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">dependency</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">explanation</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.reasons.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ModuleReason</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">, dependency, explanation));</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">removeReason</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">dependency</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.reasons.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> r </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.reasons[i];</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (r.module </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> r.dependency </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> dependency) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.reasons.</span><span style="color:#B392F0;">splice</span><span style="color:#E1E4E8;">(i, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">hasReasonForChunk</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">chunk</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._rewriteChunkInReasons) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">operation</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._rewriteChunkInReasons) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">_doRewriteChunkInReasons</span><span style="color:#E1E4E8;">(operation.oldChunk, operation.newChunks);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._rewriteChunkInReasons </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.reasons.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.reasons[i].</span><span style="color:#B392F0;">hasChunk</span><span style="color:#E1E4E8;">(chunk)) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">hasReasons</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.reasons.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rewriteChunkInReasons</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">oldChunk</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">newChunks</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// This is expensive. Delay operation until we really need the data</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._rewriteChunkInReasons </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._rewriteChunkInReasons </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._rewriteChunkInReasons.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">      oldChunk,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      newChunks</span></span>\n<span class="line"><span style="color:#E1E4E8;">    });</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">_doRewriteChunkInReasons</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">oldChunk</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">newChunks</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.reasons.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.reasons[i].</span><span style="color:#B392F0;">rewriteChunks</span><span style="color:#E1E4E8;">(oldChunk, newChunks);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string=}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">exportName</span><span style="color:#6A737D;"> the name of the export</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{boolean|string}</span><span style="color:#6A737D;"> false if the export isn&#39;t used, true if no exportName is provided and the module is used, or the name to access it if the export is used</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">isUsed</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exportName</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">exportName) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.used </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.used </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usedExports </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> exportName;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.used) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usedExports) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usedExports </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> exportName;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> idx </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usedExports.</span><span style="color:#B392F0;">indexOf</span><span style="color:#E1E4E8;">(exportName);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (idx </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Mangle export name if possible</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">isProvided</span><span style="color:#E1E4E8;">(exportName)) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta.exportsType </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;namespace&quot;</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Template.</span><span style="color:#B392F0;">numberToIdentifer</span><span style="color:#E1E4E8;">(idx);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta.exportsType </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;named&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usedExports.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;default&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">      ) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Template.</span><span style="color:#B392F0;">numberToIdentifer</span><span style="color:#E1E4E8;">(idx);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> exportName;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">isProvided</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">exportName</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">Array</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">isArray</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta.providedExports)) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta.providedExports.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(exportName);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`Module[${</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">id</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">||</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">debugId</span><span style="color:#9ECBFF;">}]`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">needRebuild</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">fileTimestamps</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">contextTimestamps</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Hash}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">hash</span><span style="color:#6A737D;"> the hash used to track dependencies</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">hash</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    hash.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">`${</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">id</span><span style="color:#9ECBFF;">}`</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    hash.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usedExports));</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(hash);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">sortItems</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">sortChunks</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">sortItems</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (sortChunks) </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks.</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.reasons.</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">b</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (a.module </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> b.module) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">a.module) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">b.module) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sortById</span><span style="color:#E1E4E8;">(a.module, b.module);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    });</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">Array</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">isArray</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usedExports)) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usedExports.</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">unbuild</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.blocks.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.variables.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">disconnect</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">arguments</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Module.arguments was removed, there is no replacement.&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">arguments</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Module.arguments was removed, there is no replacement.&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// TODO remove in webpack 5</span></span>\n<span class="line"><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;forEachChunk&quot;</span><span style="color:#E1E4E8;">, {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  configurable: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  value: util.</span><span style="color:#B392F0;">deprecate</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">    * </span><span style="color:#F97583;">@deprecated</span></span>\n<span class="line"><span style="color:#6A737D;">    * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{function(any, any, Set&lt;any&gt;): void}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">fn</span><span style="color:#6A737D;"> callback function</span></span>\n<span class="line"><span style="color:#6A737D;">    * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span></span>\n<span class="line"><span style="color:#6A737D;">    * </span><span style="color:#F97583;">@this</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Module}</span></span>\n<span class="line"><span style="color:#6A737D;">    */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">fn</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(fn);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    },</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Module.forEachChunk: Use for(const chunk of module.chunksIterable) instead&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  )</span></span>\n<span class="line"><span style="color:#E1E4E8;">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// TODO remove in webpack 5</span></span>\n<span class="line"><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;mapChunks&quot;</span><span style="color:#E1E4E8;">, {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  configurable: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  value: util.</span><span style="color:#B392F0;">deprecate</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">    * </span><span style="color:#F97583;">@deprecated</span></span>\n<span class="line"><span style="color:#6A737D;">    * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{function(any, any): void}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">fn</span><span style="color:#6A737D;"> Mapper function</span></span>\n<span class="line"><span style="color:#6A737D;">    * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Array&lt;TODO&gt;}</span><span style="color:#6A737D;"> Array of chunks mapped</span></span>\n<span class="line"><span style="color:#6A737D;">    * </span><span style="color:#F97583;">@this</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Module}</span></span>\n<span class="line"><span style="color:#6A737D;">    */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">fn</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Array</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._chunks, fn);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    },</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Module.mapChunks: Use Array.from(module.chunksIterable, fn) instead&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  )</span></span>\n<span class="line"><span style="color:#E1E4E8;">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// TODO remove in webpack 5</span></span>\n<span class="line"><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;entry&quot;</span><span style="color:#E1E4E8;">, {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  configurable: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Module.entry was removed. Use Chunk.entryModule&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  },</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Module.entry was removed. Use Chunk.entryModule&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// TODO remove in webpack 5</span></span>\n<span class="line"><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;meta&quot;</span><span style="color:#E1E4E8;">, {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  configurable: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  get: util.</span><span style="color:#B392F0;">deprecate</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">    * </span><span style="color:#F97583;">@deprecated</span></span>\n<span class="line"><span style="color:#6A737D;">    * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span></span>\n<span class="line"><span style="color:#6A737D;">    * </span><span style="color:#F97583;">@this</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Module}</span></span>\n<span class="line"><span style="color:#6A737D;">    */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    },</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Module.meta was renamed to Module.buildMeta&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  ),</span></span>\n<span class="line"><span style="color:#E1E4E8;">  set: util.</span><span style="color:#B392F0;">deprecate</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">    * </span><span style="color:#F97583;">@deprecated</span></span>\n<span class="line"><span style="color:#6A737D;">    * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{TODO}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">value</span><span style="color:#6A737D;"> Value</span></span>\n<span class="line"><span style="color:#6A737D;">    * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span></span>\n<span class="line"><span style="color:#6A737D;">    * </span><span style="color:#F97583;">@this</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Module}</span></span>\n<span class="line"><span style="color:#6A737D;">    */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    },</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Module.meta was renamed to Module.buildMeta&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  )</span></span>\n<span class="line"><span style="color:#E1E4E8;">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{function(): string}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#79B8FF;">Module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.identifier </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{function(RequestShortener): string}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#79B8FF;">Module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.readableIdentifier </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#79B8FF;">Module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.build </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#79B8FF;">Module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.source </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#79B8FF;">Module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.size </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#79B8FF;">Module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.nameForCondition </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{null | function(Chunk): boolean}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#79B8FF;">Module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.chunkCondition </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#79B8FF;">Module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.updateCacheModule </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span></code></pre></div></details></li><li><p><strong>NormalModule</strong></p><details class="custom-container details"><summary>NormalModule.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NormalModule</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Module</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">constructor</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">type</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">request</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">userRequest</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">rawRequest</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">loaders</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">resource</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">matchResource</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">parser</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">generator</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">resolveOptions</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">(type, </span><span style="color:#B392F0;">getContext</span><span style="color:#E1E4E8;">(resource));</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Info from Factory</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.request </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> request;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.userRequest </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> userRequest;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.rawRequest </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> rawRequest;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.binary </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> type.</span><span style="color:#B392F0;">startsWith</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;webassembly&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.parser </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> parser;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.generator </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> generator;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.resource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> resource;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.matchResource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> matchResource;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.loaders </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> loaders;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (resolveOptions </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">) </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.resolveOptions </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> resolveOptions;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Info from Build</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.error </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._source </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._sourceSize </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._buildHash </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildTimestamp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@private</span><span style="color:#6A737D;"> </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Map&lt;string, CachedSourceEntry&gt;}</span><span style="color:#6A737D;"> */</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._cachedSources </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Map</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Options for the NormalModule set by plugins</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// TODO refactor this -&gt; options object filled from Factory</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.useSourceMap </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.lineToLine </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Cache</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._lastSuccessfulBuildMeta </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">identifier</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.request;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">readableIdentifier</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">requestShortener</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> requestShortener.</span><span style="color:#B392F0;">shorten</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.userRequest);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">libIdent</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">contextify</span><span style="color:#E1E4E8;">(options.context, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.userRequest);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">nameForCondition</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resource</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.matchResource </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.resource;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">idx</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> resource.</span><span style="color:#B392F0;">indexOf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;?&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (idx </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> resource.</span><span style="color:#B392F0;">substr</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, idx);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> resource;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">updateCacheModule</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">module</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.type </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.type;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.request </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.request;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.userRequest </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.userRequest;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.rawRequest </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.rawRequest;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.parser </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.parser;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.generator </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.generator;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.resource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.resource;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.matchResource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.matchResource;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.loaders </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.loaders;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.resolveOptions </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.resolveOptions;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">createSourceForAsset</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">content</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">sourceMap</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">sourceMap) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RawSource</span><span style="color:#E1E4E8;">(content);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> sourceMap </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;string&quot;</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OriginalSource</span><span style="color:#E1E4E8;">(content, sourceMap);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SourceMapSource</span><span style="color:#E1E4E8;">(content, name, sourceMap);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">createLoaderContext</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">resolver</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">compilation</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">fs</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">requestShortener</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> compilation.runtimeTemplate.requestShortener;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getCurrentLoaderName</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">currentLoader</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getCurrentLoader</span><span style="color:#E1E4E8;">(loaderContext);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">currentLoader) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;(not in loader scope)&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> requestShortener.</span><span style="color:#B392F0;">shorten</span><span style="color:#E1E4E8;">(currentLoader.loader);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    };</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">loaderContext</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      version: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">emitWarning</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">warning</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">(warning </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Error</span><span style="color:#E1E4E8;">)) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">          warning </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NonErrorEmittedError</span><span style="color:#E1E4E8;">(warning);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.warnings.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ModuleWarning</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, warning, {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            from: </span><span style="color:#B392F0;">getCurrentLoaderName</span><span style="color:#E1E4E8;">()</span></span>\n<span class="line"><span style="color:#E1E4E8;">          })</span></span>\n<span class="line"><span style="color:#E1E4E8;">        );</span></span>\n<span class="line"><span style="color:#E1E4E8;">      },</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">emitError</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">error</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">(error </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Error</span><span style="color:#E1E4E8;">)) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">          error </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NonErrorEmittedError</span><span style="color:#E1E4E8;">(error);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.errors.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ModuleError</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, error, {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            from: </span><span style="color:#B392F0;">getCurrentLoaderName</span><span style="color:#E1E4E8;">()</span></span>\n<span class="line"><span style="color:#E1E4E8;">          })</span></span>\n<span class="line"><span style="color:#E1E4E8;">        );</span></span>\n<span class="line"><span style="color:#E1E4E8;">      },</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">getLogger</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">currentLoader</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getCurrentLoader</span><span style="color:#E1E4E8;">(loaderContext);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> compilation.</span><span style="color:#B392F0;">getLogger</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">          [currentLoader </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> currentLoader.loader, name, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">identifier</span><span style="color:#E1E4E8;">()]</span></span>\n<span class="line"><span style="color:#E1E4E8;">            .</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Boolean</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">            .</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;|&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">        );</span></span>\n<span class="line"><span style="color:#E1E4E8;">      },</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// TODO remove in webpack 5</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">exec</span><span style="color:#E1E4E8;">: (</span><span style="color:#FFAB70;">code</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">filename</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// @ts-ignore Argument of type &#39;this&#39; is not assignable to parameter of type &#39;Module&#39;.</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NativeModule</span><span style="color:#E1E4E8;">(filename, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// @ts-ignore _nodeModulePaths is deprecated and undocumented Node.js API</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.paths </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> NativeModule.</span><span style="color:#B392F0;">_nodeModulePaths</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.context);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">filename</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> filename;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">_compile</span><span style="color:#E1E4E8;">(code, filename);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      },</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">context</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">request</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">callback</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        resolver.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">({}, context, request, {}, callback);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      },</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">getResolve</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">child</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> resolver.</span><span style="color:#B392F0;">withOptions</span><span style="color:#E1E4E8;">(options) </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> resolver;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">context</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">request</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">callback</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (callback) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            child.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">({}, context, request, {}, callback);</span></span>\n<span class="line"><span style="color:#E1E4E8;">          } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">resolve</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">reject</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">              child.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">({}, context, request, {}, (</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">result</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (err) </span><span style="color:#B392F0;">reject</span><span style="color:#E1E4E8;">(err);</span></span>\n<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(result);</span></span>\n<span class="line"><span style="color:#E1E4E8;">              });</span></span>\n<span class="line"><span style="color:#E1E4E8;">            });</span></span>\n<span class="line"><span style="color:#E1E4E8;">          }</span></span>\n<span class="line"><span style="color:#E1E4E8;">        };</span></span>\n<span class="line"><span style="color:#E1E4E8;">      },</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">emitFile</span><span style="color:#E1E4E8;">: (</span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">content</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">sourceMap</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">assetInfo</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo.assets) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo.assets </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo.assetsInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Map</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo.assets[name] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">createSourceForAsset</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">          name,</span></span>\n<span class="line"><span style="color:#E1E4E8;">          content,</span></span>\n<span class="line"><span style="color:#E1E4E8;">          sourceMap</span></span>\n<span class="line"><span style="color:#E1E4E8;">        );</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo.assetsInfo.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(name, assetInfo);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      },</span></span>\n<span class="line"><span style="color:#E1E4E8;">      rootContext: options.context,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      webpack: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      sourceMap: </span><span style="color:#F97583;">!!</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.useSourceMap,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      mode: options.mode </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;production&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      _module: </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      _compilation: compilation,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      _compiler: compilation.compiler,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      fs: fs</span></span>\n<span class="line"><span style="color:#E1E4E8;">    };</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    compilation.hooks.normalModuleLoader.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(loaderContext, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.loader) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">assign</span><span style="color:#E1E4E8;">(loaderContext, options.loader);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> loaderContext;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">getCurrentLoader</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">loaderContext</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">index</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> loaderContext.loaderIndex) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.loaders </span><span style="color:#F97583;">&amp;&amp;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.loaders.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      index </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.loaders.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      index </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.loaders[index]</span></span>\n<span class="line"><span style="color:#E1E4E8;">    ) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.loaders[index];</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">createSource</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">source</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">resourceBuffer</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">sourceMap</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// if there is no identifier return raw source</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.identifier) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RawSource</span><span style="color:#E1E4E8;">(source);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// from here on we assume we have an identifier</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">identifier</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">identifier</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.lineToLine </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> resourceBuffer) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LineToLineMappedSource</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">        source,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        identifier,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">asString</span><span style="color:#E1E4E8;">(resourceBuffer)</span></span>\n<span class="line"><span style="color:#E1E4E8;">      );</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.useSourceMap </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> sourceMap) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SourceMapSource</span><span style="color:#E1E4E8;">(source, identifier, sourceMap);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (Buffer.</span><span style="color:#B392F0;">isBuffer</span><span style="color:#E1E4E8;">(source)) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// @ts-ignore</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// TODO We need to fix @types/webpack-sources to allow RawSource to take a Buffer | string</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RawSource</span><span style="color:#E1E4E8;">(source);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OriginalSource</span><span style="color:#E1E4E8;">(source, identifier);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">doBuild</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">compilation</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">resolver</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">fs</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">callback</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">loaderContext</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">createLoaderContext</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">      resolver,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      options,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      compilation,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      fs</span></span>\n<span class="line"><span style="color:#E1E4E8;">    );</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">runLoaders</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">      {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        resource: </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.resource,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        loaders: </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.loaders,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        context: loaderContext,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        readResource: fs.readFile.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(fs)</span></span>\n<span class="line"><span style="color:#E1E4E8;">      },</span></span>\n<span class="line"><span style="color:#E1E4E8;">      (</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">result</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (result) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo.cacheable </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> result.cacheable;</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo.fileDependencies </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Set</span><span style="color:#E1E4E8;">(result.fileDependencies);</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo.contextDependencies </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Set</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">            result.contextDependencies</span></span>\n<span class="line"><span style="color:#E1E4E8;">          );</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (err) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">(err </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Error</span><span style="color:#E1E4E8;">)) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            err </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NonErrorEmittedError</span><span style="color:#E1E4E8;">(err);</span></span>\n<span class="line"><span style="color:#E1E4E8;">          }</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">currentLoader</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getCurrentLoader</span><span style="color:#E1E4E8;">(loaderContext);</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">error</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ModuleBuildError</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, err, {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            from:</span></span>\n<span class="line"><span style="color:#E1E4E8;">              currentLoader </span><span style="color:#F97583;">&amp;&amp;</span></span>\n<span class="line"><span style="color:#E1E4E8;">              compilation.runtimeTemplate.requestShortener.</span><span style="color:#B392F0;">shorten</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">                currentLoader.loader</span></span>\n<span class="line"><span style="color:#E1E4E8;">              )</span></span>\n<span class="line"><span style="color:#E1E4E8;">          });</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">callback</span><span style="color:#E1E4E8;">(error);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resourceBuffer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> result.resourceBuffer;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">source</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> result.result[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sourceMap</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> result.result.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> result.result[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">extraInfo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> result.result.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> result.result[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">Buffer.</span><span style="color:#B392F0;">isBuffer</span><span style="color:#E1E4E8;">(source) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> source </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;string&quot;</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">currentLoader</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getCurrentLoader</span><span style="color:#E1E4E8;">(loaderContext, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">err</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">`Final loader (${</span></span>\n<span class="line"><span style="color:#9ECBFF;">              </span><span style="color:#E1E4E8;">currentLoader</span></span>\n<span class="line"><span style="color:#9ECBFF;">                </span><span style="color:#F97583;">?</span><span style="color:#9ECBFF;"> </span><span style="color:#E1E4E8;">compilation</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">runtimeTemplate</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">requestShortener</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">shorten</span><span style="color:#9ECBFF;">(</span></span>\n<span class="line"><span style="color:#9ECBFF;">                    </span><span style="color:#E1E4E8;">currentLoader</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">loader</span></span>\n<span class="line"><span style="color:#9ECBFF;">                  )</span></span>\n<span class="line"><span style="color:#9ECBFF;">                </span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;"> </span><span style="color:#9ECBFF;">&quot;unknown&quot;</span></span>\n<span class="line"><span style="color:#9ECBFF;">            </span><span style="color:#9ECBFF;">}) didn&#39;t return a Buffer or String`</span></span>\n<span class="line"><span style="color:#E1E4E8;">          );</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">error</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ModuleBuildError</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, err);</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">callback</span><span style="color:#E1E4E8;">(error);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._source </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">createSource</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.binary </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">asBuffer</span><span style="color:#E1E4E8;">(source) </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">asString</span><span style="color:#E1E4E8;">(source),</span></span>\n<span class="line"><span style="color:#E1E4E8;">          resourceBuffer,</span></span>\n<span class="line"><span style="color:#E1E4E8;">          sourceMap</span></span>\n<span class="line"><span style="color:#E1E4E8;">        );</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._sourceSize </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._ast </span><span style="color:#F97583;">=</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> extraInfo </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;object&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span></span>\n<span class="line"><span style="color:#E1E4E8;">          extraInfo </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span></span>\n<span class="line"><span style="color:#E1E4E8;">          extraInfo.webpackAST </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> extraInfo.webpackAST</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">callback</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    );</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">markModuleAsErrored</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">error</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Restore build meta from successful build to keep importing state</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">assign</span><span style="color:#E1E4E8;">({}, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._lastSuccessfulBuildMeta);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.error </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> error;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.errors.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.error);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._source </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RawSource</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;throw new Error(&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.error.message) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;);&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    );</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._sourceSize </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._ast </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">applyNoParseRule</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">rule</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">content</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// must start with &quot;rule&quot; if rule is a string</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> rule </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;string&quot;</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> content.</span><span style="color:#B392F0;">indexOf</span><span style="color:#E1E4E8;">(rule) </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> rule </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;function&quot;</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rule</span><span style="color:#E1E4E8;">(content);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// we assume rule is a regexp</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> rule.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(content);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// check if module should not be parsed</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// returns &quot;true&quot; if the module should !not! be parsed</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// returns &quot;false&quot; if the module !must! be parsed</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">shouldPreventParsing</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">noParseRule</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">request</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// if no noParseRule exists, return false</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// the module !must! be parsed.</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">noParseRule) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// we only have one rule to check</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">Array</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">isArray</span><span style="color:#E1E4E8;">(noParseRule)) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// returns &quot;true&quot; if the module is !not! to be parsed</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">applyNoParseRule</span><span style="color:#E1E4E8;">(noParseRule, request);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> noParseRule.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">rule</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> noParseRule[i];</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// early exit on first truthy match</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// this module is !not! to be parsed</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">applyNoParseRule</span><span style="color:#E1E4E8;">(rule, request)) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// no match found, so this module !should! be parsed</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">_initBuildHash</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">compilation</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hash</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createHash</span><span style="color:#E1E4E8;">(compilation.outputOptions.hashFunction);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._source) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      hash.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;source&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._source.</span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(hash);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    hash.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;meta&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    hash.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta));</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._buildHash </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> */</span><span style="color:#E1E4E8;"> (hash.</span><span style="color:#B392F0;">digest</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hex&quot;</span><span style="color:#E1E4E8;">));</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">compilation</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">resolver</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">fs</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">callback</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildTimestamp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Date</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.built </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._source </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._sourceSize </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._ast </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._buildHash </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.error </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.errors.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.warnings.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      cacheable: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      fileDependencies: </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Set</span><span style="color:#E1E4E8;">(),</span></span>\n<span class="line"><span style="color:#E1E4E8;">      contextDependencies: </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Set</span><span style="color:#E1E4E8;">(),</span></span>\n<span class="line"><span style="color:#E1E4E8;">      assets: </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      assetsInfo: </span><span style="color:#79B8FF;">undefined</span></span>\n<span class="line"><span style="color:#E1E4E8;">    };</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">doBuild</span><span style="color:#E1E4E8;">(options, compilation, resolver, fs, </span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._cachedSources.</span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// if we have an error mark module as failed and exit</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (err) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">markModuleAsErrored</span><span style="color:#E1E4E8;">(err);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">_initBuildHash</span><span style="color:#E1E4E8;">(compilation);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">callback</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// check if this module should !not! be parsed.</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// if so, exit here;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">noParseRule</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.module </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> options.module.noParse;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">shouldPreventParsing</span><span style="color:#E1E4E8;">(noParseRule, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.request)) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">_initBuildHash</span><span style="color:#E1E4E8;">(compilation);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">callback</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">handleParseError</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">source</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._source.</span><span style="color:#B392F0;">source</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">loaders</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.loaders.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">item</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">contextify</span><span style="color:#E1E4E8;">(options.context, item.loader)</span></span>\n<span class="line"><span style="color:#E1E4E8;">        );</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">error</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ModuleParseError</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, source, e, loaders);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">markModuleAsErrored</span><span style="color:#E1E4E8;">(error);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">_initBuildHash</span><span style="color:#E1E4E8;">(compilation);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">callback</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">      };</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">handleParseResult</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._lastSuccessfulBuildMeta </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">_initBuildHash</span><span style="color:#E1E4E8;">(compilation);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">callback</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">      };</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.parser.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._ast </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._source.</span><span style="color:#B392F0;">source</span><span style="color:#E1E4E8;">(),</span></span>\n<span class="line"><span style="color:#E1E4E8;">          {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            current: </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">            module: </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">            compilation: compilation,</span></span>\n<span class="line"><span style="color:#E1E4E8;">            options: options</span></span>\n<span class="line"><span style="color:#E1E4E8;">          },</span></span>\n<span class="line"><span style="color:#E1E4E8;">          (</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">result</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (err) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#B392F0;">handleParseError</span><span style="color:#E1E4E8;">(err);</span></span>\n<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#B392F0;">handleParseResult</span><span style="color:#E1E4E8;">(result);</span></span>\n<span class="line"><span style="color:#E1E4E8;">            }</span></span>\n<span class="line"><span style="color:#E1E4E8;">          }</span></span>\n<span class="line"><span style="color:#E1E4E8;">        );</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (result </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;">// parse is sync</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">handleParseResult</span><span style="color:#E1E4E8;">(result);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"><span style="color:#E1E4E8;">      } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (e) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">handleParseError</span><span style="color:#E1E4E8;">(e);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    });</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">getHashDigest</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">dependencyTemplates</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// TODO webpack 5 refactor</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> dtHash </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dependencyTemplates.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hash&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`${</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">hash</span><span style="color:#9ECBFF;">}-${</span><span style="color:#E1E4E8;">dtHash</span><span style="color:#9ECBFF;">}`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">source</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">dependencyTemplates</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">runtimeTemplate</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;javascript&quot;</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hashDigest</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getHashDigest</span><span style="color:#E1E4E8;">(dependencyTemplates);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">cacheEntry</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._cachedSources.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(type);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (cacheEntry </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> cacheEntry.hash </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> hashDigest) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// We can reuse the cached source</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> cacheEntry.source;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">source</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.generator.</span><span style="color:#B392F0;">generate</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      dependencyTemplates,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      runtimeTemplate,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      type</span></span>\n<span class="line"><span style="color:#E1E4E8;">    );</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">cachedSource</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CachedSource</span><span style="color:#E1E4E8;">(source);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._cachedSources.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(type, {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      source: cachedSource,</span></span>\n<span class="line"><span style="color:#E1E4E8;">      hash: hashDigest</span></span>\n<span class="line"><span style="color:#E1E4E8;">    });</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> cachedSource;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">originalSource</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._source;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">needRebuild</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">fileTimestamps</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">contextTimestamps</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// always try to rebuild in case of an error</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.error) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// always rebuild when module is not cacheable</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo.cacheable) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Check timestamps of all dependencies</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Missing timestamp -&gt; need rebuild</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Timestamp bigger than buildTimestamp -&gt; need rebuild</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo.fileDependencies) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">timestamp</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> fileTimestamps.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(file);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">timestamp) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (timestamp </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildTimestamp) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo.contextDependencies) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">timestamp</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> contextTimestamps.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(file);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">timestamp) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (timestamp </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildTimestamp) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// elsewise -&gt; no rebuild needed</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._sourceSize </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._sourceSize </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._source </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._source.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._sourceSize;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Hash}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">hash</span><span style="color:#6A737D;"> the hash used to track dependencies</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">hash</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    hash.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._buildHash);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(hash);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div></details><p>绝大部分的 Module 都属于 NormalModule。</p></li><li><p><strong>MultiModule</strong></p><details class="custom-container details"><summary>MultiModule.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MultiModule</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Module</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">constructor</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">context</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">dependencies</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;javascript/dynamic&quot;</span><span style="color:#E1E4E8;">, context);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Info from Factory</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dependencies;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> name;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._identifier </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`multi ${</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">dependencies</span></span>\n<span class="line"><span style="color:#9ECBFF;">      .</span><span style="color:#B392F0;">map</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">d</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#9ECBFF;"> </span><span style="color:#E1E4E8;">d</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">request</span><span style="color:#9ECBFF;">)</span></span>\n<span class="line"><span style="color:#9ECBFF;">      .</span><span style="color:#B392F0;">join</span><span style="color:#9ECBFF;">(</span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">identifier</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">._identifier;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">readableIdentifier</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">requestShortener</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`multi ${</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">dependencies</span></span>\n<span class="line"><span style="color:#9ECBFF;">      .</span><span style="color:#B392F0;">map</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">d</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#9ECBFF;"> </span><span style="color:#E1E4E8;">requestShortener</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">shorten</span><span style="color:#9ECBFF;">(</span><span style="color:#E1E4E8;">d</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">request</span><span style="color:#9ECBFF;">))</span></span>\n<span class="line"><span style="color:#9ECBFF;">      .</span><span style="color:#B392F0;">join</span><span style="color:#9ECBFF;">(</span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">compilation</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">resolver</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">fs</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">callback</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.built </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">callback</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">needRebuild</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Hash}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">hash</span><span style="color:#6A737D;"> the hash used to track dependencies</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">hash</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    hash.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;multi module&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    hash.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.name </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(hash);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">source</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">dependencyTemplates</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">runtimeTemplate</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> idx </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dep</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (dep.module) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (idx </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">          str.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;module.exports = &quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"><span style="color:#E1E4E8;">        str.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;__webpack_require__(&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (runtimeTemplate.outputOptions.pathinfo) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">          str.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(Template.</span><span style="color:#B392F0;">toComment</span><span style="color:#E1E4E8;">(dep.request));</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }</span></span>\n<span class="line"><span style="color:#E1E4E8;">        str.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">`${</span><span style="color:#79B8FF;">JSON</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#9ECBFF;">(</span><span style="color:#E1E4E8;">dep</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">module</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">id</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}`</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">        str.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;)&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">content</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./dependencies/WebpackMissingModule&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">module</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">          dep.request</span></span>\n<span class="line"><span style="color:#E1E4E8;">        );</span></span>\n<span class="line"><span style="color:#E1E4E8;">        str.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(content);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"><span style="color:#E1E4E8;">      str.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      idx</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RawSource</span><span style="color:#E1E4E8;">(str.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">));</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div></details></li><li><p><strong>DllModule</strong></p><details class="custom-container details"><summary>DllModule.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DllModule</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Module</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">constructor</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">context</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">dependencies</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">type</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;javascript/dynamic&quot;</span><span style="color:#E1E4E8;">, context);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Info from Factory</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dependencies;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> name;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.type </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> type;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">identifier</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`dll ${</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">name</span><span style="color:#9ECBFF;">}`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">readableIdentifier</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`dll ${</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">name</span><span style="color:#9ECBFF;">}`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">compilation</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">resolver</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">fs</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">callback</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.built </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">callback</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">source</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RawSource</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;module.exports = __webpack_require__;&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">needRebuild</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Hash}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">hash</span><span style="color:#6A737D;"> the hash used to track dependencies</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">hash</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    hash.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;dll module&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    hash.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.name </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(hash);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div></details></li><li><p><strong>DelegatedModule</strong></p><details class="custom-container details"><summary>DelegatedModule.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DelegatedModule</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Module</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">constructor</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">sourceRequest</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">type</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">userRequest</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">originalRequest</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;javascript/dynamic&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Info from Factory</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.sourceRequest </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sourceRequest;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.request </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data.id;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.type </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> type;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.userRequest </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> userRequest;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.originalRequest </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> originalRequest;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.delegateData </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Build info</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.delegatedSourceDependency </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">libIdent</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.originalRequest </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;string&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.originalRequest</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.originalRequest.</span><span style="color:#B392F0;">libIdent</span><span style="color:#E1E4E8;">(options);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">identifier</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`delegated ${</span><span style="color:#79B8FF;">JSON</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">request</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">} from ${</span></span>\n<span class="line"><span style="color:#9ECBFF;">      </span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">sourceRequest</span></span>\n<span class="line"><span style="color:#9ECBFF;">    </span><span style="color:#9ECBFF;">}`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">readableIdentifier</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`delegated ${</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">userRequest</span><span style="color:#9ECBFF;">} from ${</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">sourceRequest</span><span style="color:#9ECBFF;">}`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">needRebuild</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">compilation</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">resolver</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">fs</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">callback</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.built </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">assign</span><span style="color:#E1E4E8;">({}, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.delegateData.buildMeta);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.delegatedSourceDependency </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DelegatedSourceDependency</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.sourceRequest</span></span>\n<span class="line"><span style="color:#E1E4E8;">    );</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">addDependency</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.delegatedSourceDependency);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">addDependency</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DelegatedExportsDependency</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.delegateData.exports </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    );</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">callback</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">source</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">depTemplates</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">runtime</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dep</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{DelegatedSourceDependency}</span><span style="color:#6A737D;"> */</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dependencies[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sourceModule</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dep.module;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> str;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">sourceModule) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> WebpackMissingModule.</span><span style="color:#B392F0;">moduleCode</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.sourceRequest);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`module.exports = (${</span><span style="color:#E1E4E8;">runtime</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">moduleExports</span><span style="color:#9ECBFF;">({</span></span>\n<span class="line"><span style="color:#9ECBFF;">        module: </span><span style="color:#E1E4E8;">sourceModule</span><span style="color:#9ECBFF;">,</span></span>\n<span class="line"><span style="color:#9ECBFF;">        request: </span><span style="color:#E1E4E8;">dep</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">request</span></span>\n<span class="line"><span style="color:#9ECBFF;">      })</span><span style="color:#9ECBFF;">})`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.type) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;require&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">          str </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`(${</span><span style="color:#79B8FF;">JSON</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">request</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">})`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;object&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">          str </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`[${</span><span style="color:#79B8FF;">JSON</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">this</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">request</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}]`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">      str </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;;&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.useSourceMap) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OriginalSource</span><span style="color:#E1E4E8;">(str, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">identifier</span><span style="color:#E1E4E8;">());</span></span>\n<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RawSource</span><span style="color:#E1E4E8;">(str);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">42</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Hash}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">hash</span><span style="color:#6A737D;"> the hash used to track dependencies</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">hash</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    hash.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.type);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    hash.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.request));</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(hash);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div></details></li><li><p><strong>ExternalModule</strong></p><details class="custom-container details"><summary>ExternalModule.js</summary><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ExternalModule</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Module</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">constructor</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">request</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">type</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">userRequest</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;javascript/dynamic&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Info from Factory</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.request </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> request;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.externalType </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> type;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.userRequest </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> userRequest;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.external </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">libIdent</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.userRequest;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">chunkCondition</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">chunk</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> chunk.</span><span style="color:#B392F0;">hasEntryModule</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">identifier</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;external &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.request);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">readableIdentifier</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;external &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.request);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">needRebuild</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">compilation</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">resolver</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">fs</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">callback</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.built </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildMeta </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.buildInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">callback</span><span style="color:#E1E4E8;">();</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">getSourceForGlobalVariableExternal</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">variableName</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">type</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">Array</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">isArray</span><span style="color:#E1E4E8;">(variableName)) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// make it an array as the look up works the same basically</span></span>\n<span class="line"><span style="color:#E1E4E8;">      variableName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [variableName];</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// needed for e.g. window[&quot;some&quot;][&quot;thing&quot;]</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">objectLookup</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> variableName</span></span>\n<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">r</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`[${</span><span style="color:#79B8FF;">JSON</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#9ECBFF;">(</span><span style="color:#E1E4E8;">r</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}]`</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`(function() { module.exports = ${</span><span style="color:#E1E4E8;">type</span><span style="color:#9ECBFF;">}${</span><span style="color:#E1E4E8;">objectLookup</span><span style="color:#9ECBFF;">}; }());`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">getSourceForCommonJsExternal</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">moduleAndSpecifiers</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">Array</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">isArray</span><span style="color:#E1E4E8;">(moduleAndSpecifiers)) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`module.exports = require(${</span><span style="color:#79B8FF;">JSON</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#9ECBFF;">(</span></span>\n<span class="line"><span style="color:#9ECBFF;">        </span><span style="color:#E1E4E8;">moduleAndSpecifiers</span></span>\n<span class="line"><span style="color:#9ECBFF;">      )</span><span style="color:#9ECBFF;">});`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">moduleName</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> moduleAndSpecifiers[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">objectLookup</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> moduleAndSpecifiers</span></span>\n<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">r</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`[${</span><span style="color:#79B8FF;">JSON</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#9ECBFF;">(</span><span style="color:#E1E4E8;">r</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}]`</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`module.exports = require(${</span><span style="color:#79B8FF;">JSON</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#9ECBFF;">(</span></span>\n<span class="line"><span style="color:#9ECBFF;">      </span><span style="color:#E1E4E8;">moduleName</span></span>\n<span class="line"><span style="color:#9ECBFF;">    )</span><span style="color:#9ECBFF;">})${</span><span style="color:#E1E4E8;">objectLookup</span><span style="color:#9ECBFF;">};`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">checkExternalVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">variableToCheck</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">request</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`if(typeof ${</span><span style="color:#E1E4E8;">variableToCheck</span><span style="color:#9ECBFF;">} === &#39;undefined&#39;) {${</span><span style="color:#E1E4E8;">WebpackMissingModule</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">moduleCode</span><span style="color:#9ECBFF;">(</span></span>\n<span class="line"><span style="color:#9ECBFF;">      </span><span style="color:#E1E4E8;">request</span></span>\n<span class="line"><span style="color:#9ECBFF;">    )</span><span style="color:#9ECBFF;">}}</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">getSourceForAmdOrUmdExternal</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">id</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">optional</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">request</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">externalVariable</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`__WEBPACK_EXTERNAL_MODULE_${</span><span style="color:#E1E4E8;">Template</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">toIdentifier</span><span style="color:#9ECBFF;">(</span></span>\n<span class="line"><span style="color:#9ECBFF;">      </span><span style="color:#9ECBFF;">`${</span><span style="color:#E1E4E8;">id</span><span style="color:#9ECBFF;">}`</span></span>\n<span class="line"><span style="color:#9ECBFF;">    )</span><span style="color:#9ECBFF;">}__`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">missingModuleError</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> optional</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">checkExternalVariable</span><span style="color:#E1E4E8;">(externalVariable, request)</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`${</span><span style="color:#E1E4E8;">missingModuleError</span><span style="color:#9ECBFF;">}module.exports = ${</span><span style="color:#E1E4E8;">externalVariable</span><span style="color:#9ECBFF;">};`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">getSourceForDefaultCase</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">optional</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">request</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">Array</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">isArray</span><span style="color:#E1E4E8;">(request)) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// make it an array as the look up works the same basically</span></span>\n<span class="line"><span style="color:#E1E4E8;">      request </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [request];</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">variableName</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> request[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">missingModuleError</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> optional</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">checkExternalVariable</span><span style="color:#E1E4E8;">(variableName, request.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;.&quot;</span><span style="color:#E1E4E8;">))</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">objectLookup</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> request</span></span>\n<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">r</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`[${</span><span style="color:#79B8FF;">JSON</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#9ECBFF;">(</span><span style="color:#E1E4E8;">r</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}]`</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`${</span><span style="color:#E1E4E8;">missingModuleError</span><span style="color:#9ECBFF;">}module.exports = ${</span><span style="color:#E1E4E8;">variableName</span><span style="color:#9ECBFF;">}${</span><span style="color:#E1E4E8;">objectLookup</span><span style="color:#9ECBFF;">};`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">getSourceString</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">runtime</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">request</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.request </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;object&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">Array</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">isArray</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.request)</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.request[</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.externalType]</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.request;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.externalType) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;this&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;window&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;self&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getSourceForGlobalVariableExternal</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">          request,</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.externalType</span></span>\n<span class="line"><span style="color:#E1E4E8;">        );</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;global&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getSourceForGlobalVariableExternal</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">          request,</span></span>\n<span class="line"><span style="color:#E1E4E8;">          runtime.outputOptions.globalObject</span></span>\n<span class="line"><span style="color:#E1E4E8;">        );</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;commonjs&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;commonjs2&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getSourceForCommonJsExternal</span><span style="color:#E1E4E8;">(request);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;amd&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;amd-require&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;umd&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;umd2&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;system&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getSourceForAmdOrUmdExternal</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.id,</span></span>\n<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.optional,</span></span>\n<span class="line"><span style="color:#E1E4E8;">          request</span></span>\n<span class="line"><span style="color:#E1E4E8;">        );</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getSourceForDefaultCase</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.optional, request);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">getSource</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">sourceString</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.useSourceMap) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OriginalSource</span><span style="color:#E1E4E8;">(sourceString, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">identifier</span><span style="color:#E1E4E8;">());</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RawSource</span><span style="color:#E1E4E8;">(sourceString);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">source</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">dependencyTemplates</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">runtime</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getSource</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getSourceString</span><span style="color:#E1E4E8;">(runtime));</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">() {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">42</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Hash}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">hash</span><span style="color:#6A737D;"> the hash used to track dependencies</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">hash</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    hash.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.externalType);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    hash.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.request));</span></span>\n<span class="line"><span style="color:#E1E4E8;">    hash.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Boolean</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.optional)));</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">updateHash</span><span style="color:#E1E4E8;">(hash);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div></details></li></ol>',7),b={render:function(s,n){const a=(0,l.up)("RouterLink");return(0,l.wg)(),(0,l.j4)(l.HY,null,[p,o,(0,l.Wm)("nav",e,[(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,[(0,l.Wm)(a,{to:"#normalmodule"},{default:(0,l.w5)((()=>[E])),_:1})]),(0,l.Wm)("li",null,[(0,l.Wm)(a,{to:"#multimodule"},{default:(0,l.w5)((()=>[t])),_:1})]),(0,l.Wm)("li",null,[(0,l.Wm)(a,{to:"#externalmodule"},{default:(0,l.w5)((()=>[c])),_:1})]),(0,l.Wm)("li",null,[(0,l.Wm)(a,{to:"#dllmodule"},{default:(0,l.w5)((()=>[r])),_:1})]),(0,l.Wm)("li",null,[(0,l.Wm)(a,{to:"#delegatedmodule"},{default:(0,l.w5)((()=>[y])),_:1})]),(0,l.Wm)("li",null,[(0,l.Wm)(a,{to:"#dependenciesblock"},{default:(0,l.w5)((()=>[F])),_:1})]),(0,l.Wm)("li",null,[(0,l.Wm)(a,{to:"#entrymodule"},{default:(0,l.w5)((()=>[i])),_:1})]),(0,l.Wm)("li",null,[(0,l.Wm)(a,{to:"#关于-module-的类"},{default:(0,l.w5)((()=>[u])),_:1})])])]),B,(0,l.Wm)("ol",null,[d,(0,l.Wm)("li",null,[A,(0,l.Wm)("p",null,[m,(0,l.Wm)(a,{to:"/webpack4/term/module.html#multimodule"},{default:(0,l.w5)((()=>[D])),_:1}),_])]),h]),f],64)}}}}]);
(self.webpackChunkblog_site=self.webpackChunkblog_site||[]).push([[8487],{4929:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>l});const l={key:"v-01526f0b",path:"/webpack4/configuration/output/chunkFilename.html",title:"chunkFilename",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"webpack4/configuration/output/chunkFilename.md",git:{updatedTime:162746788e4,contributors:[{name:"jizhi",email:"jizhi@didiglobal.com",commits:1}]}}},6902:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>f});var l=a(6252);const o=(0,l.Wm)("h1",{id:"chunkfilename",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#chunkfilename","aria-hidden":"true"},"#"),(0,l.Uk)(" chunkFilename")],-1),p=(0,l.Uk)("该选项决定了非入口 js 文件的名称，它的配置与 "),e=(0,l.Uk)("filename"),t=(0,l.Uk)(" 相同，而且默认情况下，如果 "),E=(0,l.Wm)("code",null,"filename",-1),c=(0,l.Uk)(" 不是函数，就直接取 filename 的值，否则默认值就是 "),r=(0,l.Wm)("code",null,'"[id].js"',-1),y=(0,l.Uk)("，可以在 "),i=(0,l.Wm)("code",null,"WebpackOptionsDefaulter.js",-1),u=(0,l.Uk)(" 找到相关逻辑。"),F=(0,l.uE)('<div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WebpackOptionsDefaulter</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OptionsDefaulter</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;output.chunkFilename&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;make&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">filename</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options.output.filename;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> filename </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;function&quot;</span><span style="color:#E1E4E8;">) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hasName</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> filename.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;[name]&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hasId</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> filename.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;[id]&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hasChunkHash</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> filename.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;[chunkhash]&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// Anything changing depending on chunk is fine</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (hasChunkHash </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> hasName </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> hasId) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> filename;</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// Elsewise prefix &quot;[id].&quot; in front of the basename to make it changing</span></span>\n<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> filename.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">(</span><span style="color:#F97583;">^|</span><span style="color:#85E89D;font-weight:bold;">\\/</span><span style="color:#DBEDFF;">)(</span><span style="color:#79B8FF;">[</span><span style="color:#F97583;">^</span><span style="color:#79B8FF;">/]</span><span style="color:#F97583;">*</span><span style="color:#DBEDFF;">(?:</span><span style="color:#85E89D;font-weight:bold;">\\?</span><span style="color:#F97583;">|$</span><span style="color:#DBEDFF;">))</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;$1[id].$2&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;[id].js&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  });</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div>',1),h=(0,l.Uk)("具体的实现逻辑请👇"),m=(0,l.Uk)("TemplatedPathPlugin"),d=(0,l.Uk)("。"),f={render:function(s,n){const a=(0,l.up)("RouterLink");return(0,l.wg)(),(0,l.j4)(l.HY,null,[o,(0,l.Wm)("p",null,[p,(0,l.Wm)(a,{to:"/webpack4/configuration/output/filename.html"},{default:(0,l.w5)((()=>[e])),_:1}),t,E,c,r,y,i,u]),F,(0,l.Wm)("p",null,[h,(0,l.Wm)(a,{to:"/webpack4/configuration/internal-plugins/TemplatedPathPlugin.html#assetpath"},{default:(0,l.w5)((()=>[m])),_:1}),d])],64)}}}}]);
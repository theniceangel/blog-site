(self.webpackChunkblog_site=self.webpackChunkblog_site||[]).push([[7334],{265:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>o});const o={key:"v-3d396b08",path:"/webpack4/configuration/optimization/nodeEnv.html",title:"nodeEnv",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"webpack4/configuration/optimization/nodeEnv.md",git:{updatedTime:162722505e4,contributors:[{name:"jizhi",email:"jizhi@didiglobal.com",commits:1}]}}},6881:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>p});const o=(0,a(6252).uE)('<h1 id="nodeenv" tabindex="-1"><a class="header-anchor" href="#nodeenv" aria-hidden="true">#</a> nodeEnv</h1><p>nodeEnv 配置项是为了让 webpack 替换到 bundle 里面的 <code>process.env.NODE_ENV</code>，它的逻辑如下：</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (options.optimization.nodeEnv) {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DefinePlugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./DefinePlugin&quot;</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DefinePlugin</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;process.env.NODE_ENV&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">stringify</span><span style="color:#E1E4E8;">(options.optimization.nodeEnv)</span></span>\n<span class="line"><span style="color:#E1E4E8;">  }).</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(compiler);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span></code></pre></div><p>内部使用的是 DefinePlugin，在编译的时候能够替换指定的代码，它的值取决于 mode，逻辑如下：</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#6A737D;">// WebpackOptionsDefaulter</span></span>\n<span class="line"><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;optimization.nodeEnv&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;make&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 优先取 webpack.config.js, 默认值是 &quot;production&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> options.mode </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;production&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">});</span></span>\n<span class="line"></span></code></pre></div><p>举个例子，假如你的入口模块 index.js 有这么一段代码：</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">isProduction</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> process.env.</span><span style="color:#79B8FF;">NODE_ENV</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;production&#39;</span></span>\n<span class="line"></span></code></pre></div><p>经过 webpack 打包之后，输出的代码就变成如下：</p><div class="language-javascript ext-js"><pre class="shiki" style="background-color:#24292e;"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">isProduction</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;production&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;production&#39;</span></span>\n<span class="line"><span style="color:#9ECBFF;">``</span></span></code></pre></div>',9),p={render:function(s,n){return o}}}}]);